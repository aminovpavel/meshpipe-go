// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: proto/meshpipe/v1/data.proto

package grpcv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DashboardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DashboardRequest) Reset() {
	*x = DashboardRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardRequest) ProtoMessage() {}

func (x *DashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardRequest.ProtoReflect.Descriptor instead.
func (*DashboardRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{0}
}

func (x *DashboardRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type PacketTypeCount struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PortnumName   string                 `protobuf:"bytes,1,opt,name=portnum_name,json=portnumName,proto3" json:"portnum_name,omitempty"`
	Count         uint64                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketTypeCount) Reset() {
	*x = PacketTypeCount{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketTypeCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketTypeCount) ProtoMessage() {}

func (x *PacketTypeCount) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketTypeCount.ProtoReflect.Descriptor instead.
func (*PacketTypeCount) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{1}
}

func (x *PacketTypeCount) GetPortnumName() string {
	if x != nil {
		return x.PortnumName
	}
	return ""
}

func (x *PacketTypeCount) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DashboardResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	TotalNodes      uint64                 `protobuf:"varint,1,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	TotalPackets    uint64                 `protobuf:"varint,2,opt,name=total_packets,json=totalPackets,proto3" json:"total_packets,omitempty"`
	ActiveNodes_24H uint64                 `protobuf:"varint,3,opt,name=active_nodes_24h,json=activeNodes24h,proto3" json:"active_nodes_24h,omitempty"`
	RecentPackets   uint64                 `protobuf:"varint,4,opt,name=recent_packets,json=recentPackets,proto3" json:"recent_packets,omitempty"`
	AvgRssi         float64                `protobuf:"fixed64,5,opt,name=avg_rssi,json=avgRssi,proto3" json:"avg_rssi,omitempty"`
	AvgSnr          float64                `protobuf:"fixed64,6,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	SuccessRate     float64                `protobuf:"fixed64,7,opt,name=success_rate,json=successRate,proto3" json:"success_rate,omitempty"`
	PacketTypes     []*PacketTypeCount     `protobuf:"bytes,8,rep,name=packet_types,json=packetTypes,proto3" json:"packet_types,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *DashboardResponse) Reset() {
	*x = DashboardResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DashboardResponse) ProtoMessage() {}

func (x *DashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DashboardResponse.ProtoReflect.Descriptor instead.
func (*DashboardResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{2}
}

func (x *DashboardResponse) GetTotalNodes() uint64 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *DashboardResponse) GetTotalPackets() uint64 {
	if x != nil {
		return x.TotalPackets
	}
	return 0
}

func (x *DashboardResponse) GetActiveNodes_24H() uint64 {
	if x != nil {
		return x.ActiveNodes_24H
	}
	return 0
}

func (x *DashboardResponse) GetRecentPackets() uint64 {
	if x != nil {
		return x.RecentPackets
	}
	return 0
}

func (x *DashboardResponse) GetAvgRssi() float64 {
	if x != nil {
		return x.AvgRssi
	}
	return 0
}

func (x *DashboardResponse) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

func (x *DashboardResponse) GetSuccessRate() float64 {
	if x != nil {
		return x.SuccessRate
	}
	return 0
}

func (x *DashboardResponse) GetPacketTypes() []*PacketTypeCount {
	if x != nil {
		return x.PacketTypes
	}
	return nil
}

type Pagination struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      uint32                 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{3}
}

func (x *Pagination) GetPageSize() uint32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *Pagination) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type PacketFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	GatewayId     string                 `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	FromNodeId    uint32                 `protobuf:"varint,4,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId      uint32                 `protobuf:"varint,5,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	PortnumNames  []string               `protobuf:"bytes,6,rep,name=portnum_names,json=portnumNames,proto3" json:"portnum_names,omitempty"`
	ChannelId     string                 `protobuf:"bytes,7,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	HopCount      int32                  `protobuf:"varint,8,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	Search        string                 `protobuf:"bytes,9,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PacketFilter) Reset() {
	*x = PacketFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketFilter) ProtoMessage() {}

func (x *PacketFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketFilter.ProtoReflect.Descriptor instead.
func (*PacketFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{4}
}

func (x *PacketFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *PacketFilter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *PacketFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *PacketFilter) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *PacketFilter) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *PacketFilter) GetPortnumNames() []string {
	if x != nil {
		return x.PortnumNames
	}
	return nil
}

func (x *PacketFilter) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PacketFilter) GetHopCount() int32 {
	if x != nil {
		return x.HopCount
	}
	return 0
}

func (x *PacketFilter) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type Packet struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	FromNodeId            uint32                 `protobuf:"varint,3,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId              uint32                 `protobuf:"varint,4,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	PortnumName           string                 `protobuf:"bytes,5,opt,name=portnum_name,json=portnumName,proto3" json:"portnum_name,omitempty"`
	GatewayId             string                 `protobuf:"bytes,6,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	ChannelId             string                 `protobuf:"bytes,7,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	HopStart              int32                  `protobuf:"varint,8,opt,name=hop_start,json=hopStart,proto3" json:"hop_start,omitempty"`
	HopLimit              int32                  `protobuf:"varint,9,opt,name=hop_limit,json=hopLimit,proto3" json:"hop_limit,omitempty"`
	HopCount              int32                  `protobuf:"varint,10,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	Rssi                  int32                  `protobuf:"zigzag32,11,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Snr                   float64                `protobuf:"fixed64,12,opt,name=snr,proto3" json:"snr,omitempty"`
	MeshPacketId          uint32                 `protobuf:"varint,13,opt,name=mesh_packet_id,json=meshPacketId,proto3" json:"mesh_packet_id,omitempty"`
	ProcessedSuccessfully bool                   `protobuf:"varint,14,opt,name=processed_successfully,json=processedSuccessfully,proto3" json:"processed_successfully,omitempty"`
	PayloadLength         uint32                 `protobuf:"varint,15,opt,name=payload_length,json=payloadLength,proto3" json:"payload_length,omitempty"`
	RawPayload            []byte                 `protobuf:"bytes,16,opt,name=raw_payload,json=rawPayload,proto3" json:"raw_payload,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{5}
}

func (x *Packet) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Packet) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Packet) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *Packet) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *Packet) GetPortnumName() string {
	if x != nil {
		return x.PortnumName
	}
	return ""
}

func (x *Packet) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *Packet) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *Packet) GetHopStart() int32 {
	if x != nil {
		return x.HopStart
	}
	return 0
}

func (x *Packet) GetHopLimit() int32 {
	if x != nil {
		return x.HopLimit
	}
	return 0
}

func (x *Packet) GetHopCount() int32 {
	if x != nil {
		return x.HopCount
	}
	return 0
}

func (x *Packet) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *Packet) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *Packet) GetMeshPacketId() uint32 {
	if x != nil {
		return x.MeshPacketId
	}
	return 0
}

func (x *Packet) GetProcessedSuccessfully() bool {
	if x != nil {
		return x.ProcessedSuccessfully
	}
	return false
}

func (x *Packet) GetPayloadLength() uint32 {
	if x != nil {
		return x.PayloadLength
	}
	return 0
}

func (x *Packet) GetRawPayload() []byte {
	if x != nil {
		return x.RawPayload
	}
	return nil
}

type MeshPacketAggregationOptions struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeshPacketAggregationOptions) Reset() {
	*x = MeshPacketAggregationOptions{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshPacketAggregationOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshPacketAggregationOptions) ProtoMessage() {}

func (x *MeshPacketAggregationOptions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshPacketAggregationOptions.ProtoReflect.Descriptor instead.
func (*MeshPacketAggregationOptions) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{6}
}

func (x *MeshPacketAggregationOptions) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type MeshPacketAggregate struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MeshPacketId    uint32                 `protobuf:"varint,1,opt,name=mesh_packet_id,json=meshPacketId,proto3" json:"mesh_packet_id,omitempty"`
	ReceptionCount  uint64                 `protobuf:"varint,2,opt,name=reception_count,json=receptionCount,proto3" json:"reception_count,omitempty"`
	GatewayCount    uint32                 `protobuf:"varint,3,opt,name=gateway_count,json=gatewayCount,proto3" json:"gateway_count,omitempty"`
	MinRssi         int32                  `protobuf:"zigzag32,4,opt,name=min_rssi,json=minRssi,proto3" json:"min_rssi,omitempty"`
	MaxRssi         int32                  `protobuf:"zigzag32,5,opt,name=max_rssi,json=maxRssi,proto3" json:"max_rssi,omitempty"`
	MinSnr          float64                `protobuf:"fixed64,6,opt,name=min_snr,json=minSnr,proto3" json:"min_snr,omitempty"`
	MaxSnr          float64                `protobuf:"fixed64,7,opt,name=max_snr,json=maxSnr,proto3" json:"max_snr,omitempty"`
	MinHopCount     int32                  `protobuf:"varint,8,opt,name=min_hop_count,json=minHopCount,proto3" json:"min_hop_count,omitempty"`
	MaxHopCount     int32                  `protobuf:"varint,9,opt,name=max_hop_count,json=maxHopCount,proto3" json:"max_hop_count,omitempty"`
	FirstReceivedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=first_received_at,json=firstReceivedAt,proto3" json:"first_received_at,omitempty"`
	LastReceivedAt  *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=last_received_at,json=lastReceivedAt,proto3" json:"last_received_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *MeshPacketAggregate) Reset() {
	*x = MeshPacketAggregate{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeshPacketAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeshPacketAggregate) ProtoMessage() {}

func (x *MeshPacketAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeshPacketAggregate.ProtoReflect.Descriptor instead.
func (*MeshPacketAggregate) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{7}
}

func (x *MeshPacketAggregate) GetMeshPacketId() uint32 {
	if x != nil {
		return x.MeshPacketId
	}
	return 0
}

func (x *MeshPacketAggregate) GetReceptionCount() uint64 {
	if x != nil {
		return x.ReceptionCount
	}
	return 0
}

func (x *MeshPacketAggregate) GetGatewayCount() uint32 {
	if x != nil {
		return x.GatewayCount
	}
	return 0
}

func (x *MeshPacketAggregate) GetMinRssi() int32 {
	if x != nil {
		return x.MinRssi
	}
	return 0
}

func (x *MeshPacketAggregate) GetMaxRssi() int32 {
	if x != nil {
		return x.MaxRssi
	}
	return 0
}

func (x *MeshPacketAggregate) GetMinSnr() float64 {
	if x != nil {
		return x.MinSnr
	}
	return 0
}

func (x *MeshPacketAggregate) GetMaxSnr() float64 {
	if x != nil {
		return x.MaxSnr
	}
	return 0
}

func (x *MeshPacketAggregate) GetMinHopCount() int32 {
	if x != nil {
		return x.MinHopCount
	}
	return 0
}

func (x *MeshPacketAggregate) GetMaxHopCount() int32 {
	if x != nil {
		return x.MaxHopCount
	}
	return 0
}

func (x *MeshPacketAggregate) GetFirstReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstReceivedAt
	}
	return nil
}

func (x *MeshPacketAggregate) GetLastReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastReceivedAt
	}
	return nil
}

type ListPacketsRequest struct {
	state          protoimpl.MessageState        `protogen:"open.v1"`
	Filter         *PacketFilter                 `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination     *Pagination                   `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	IncludePayload bool                          `protobuf:"varint,3,opt,name=include_payload,json=includePayload,proto3" json:"include_payload,omitempty"`
	Aggregation    *MeshPacketAggregationOptions `protobuf:"bytes,4,opt,name=aggregation,proto3" json:"aggregation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListPacketsRequest) Reset() {
	*x = ListPacketsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPacketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPacketsRequest) ProtoMessage() {}

func (x *ListPacketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPacketsRequest.ProtoReflect.Descriptor instead.
func (*ListPacketsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{8}
}

func (x *ListPacketsRequest) GetFilter() *PacketFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListPacketsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

func (x *ListPacketsRequest) GetIncludePayload() bool {
	if x != nil {
		return x.IncludePayload
	}
	return false
}

func (x *ListPacketsRequest) GetAggregation() *MeshPacketAggregationOptions {
	if x != nil {
		return x.Aggregation
	}
	return nil
}

type ListPacketsResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Packets              []*Packet              `protobuf:"bytes,1,rep,name=packets,proto3" json:"packets,omitempty"`
	NextCursor           string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	MeshPacketAggregates []*MeshPacketAggregate `protobuf:"bytes,3,rep,name=mesh_packet_aggregates,json=meshPacketAggregates,proto3" json:"mesh_packet_aggregates,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ListPacketsResponse) Reset() {
	*x = ListPacketsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPacketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPacketsResponse) ProtoMessage() {}

func (x *ListPacketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPacketsResponse.ProtoReflect.Descriptor instead.
func (*ListPacketsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{9}
}

func (x *ListPacketsResponse) GetPackets() []*Packet {
	if x != nil {
		return x.Packets
	}
	return nil
}

func (x *ListPacketsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListPacketsResponse) GetMeshPacketAggregates() []*MeshPacketAggregate {
	if x != nil {
		return x.MeshPacketAggregates
	}
	return nil
}

type NodeFilter struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Search         string                 `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	Role           string                 `protobuf:"bytes,2,opt,name=role,proto3" json:"role,omitempty"`
	HardwareModel  string                 `protobuf:"bytes,3,opt,name=hardware_model,json=hardwareModel,proto3" json:"hardware_model,omitempty"`
	PrimaryChannel string                 `protobuf:"bytes,4,opt,name=primary_channel,json=primaryChannel,proto3" json:"primary_channel,omitempty"`
	NamedOnly      bool                   `protobuf:"varint,5,opt,name=named_only,json=namedOnly,proto3" json:"named_only,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NodeFilter) Reset() {
	*x = NodeFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeFilter) ProtoMessage() {}

func (x *NodeFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeFilter.ProtoReflect.Descriptor instead.
func (*NodeFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{10}
}

func (x *NodeFilter) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *NodeFilter) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *NodeFilter) GetHardwareModel() string {
	if x != nil {
		return x.HardwareModel
	}
	return ""
}

func (x *NodeFilter) GetPrimaryChannel() string {
	if x != nil {
		return x.PrimaryChannel
	}
	return ""
}

func (x *NodeFilter) GetNamedOnly() bool {
	if x != nil {
		return x.NamedOnly
	}
	return false
}

type Node struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	NodeId                 uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	HexId                  string                 `protobuf:"bytes,2,opt,name=hex_id,json=hexId,proto3" json:"hex_id,omitempty"`
	DisplayName            string                 `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	LongName               string                 `protobuf:"bytes,4,opt,name=long_name,json=longName,proto3" json:"long_name,omitempty"`
	ShortName              string                 `protobuf:"bytes,5,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	HardwareModel          string                 `protobuf:"bytes,6,opt,name=hardware_model,json=hardwareModel,proto3" json:"hardware_model,omitempty"`
	HardwareModelName      string                 `protobuf:"bytes,7,opt,name=hardware_model_name,json=hardwareModelName,proto3" json:"hardware_model_name,omitempty"`
	Role                   string                 `protobuf:"bytes,8,opt,name=role,proto3" json:"role,omitempty"`
	RoleName               string                 `protobuf:"bytes,9,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Region                 string                 `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`
	RegionName             string                 `protobuf:"bytes,11,opt,name=region_name,json=regionName,proto3" json:"region_name,omitempty"`
	ModemPreset            string                 `protobuf:"bytes,12,opt,name=modem_preset,json=modemPreset,proto3" json:"modem_preset,omitempty"`
	ModemPresetName        string                 `protobuf:"bytes,13,opt,name=modem_preset_name,json=modemPresetName,proto3" json:"modem_preset_name,omitempty"`
	FirstSeen              *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen               *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	AvgRssi                float64                `protobuf:"fixed64,16,opt,name=avg_rssi,json=avgRssi,proto3" json:"avg_rssi,omitempty"`
	AvgSnr                 float64                `protobuf:"fixed64,17,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	AvgHops                float64                `protobuf:"fixed64,18,opt,name=avg_hops,json=avgHops,proto3" json:"avg_hops,omitempty"`
	TotalPackets           uint64                 `protobuf:"varint,19,opt,name=total_packets,json=totalPackets,proto3" json:"total_packets,omitempty"`
	UniqueGateways         uint32                 `protobuf:"varint,20,opt,name=unique_gateways,json=uniqueGateways,proto3" json:"unique_gateways,omitempty"`
	UniqueDestinations     uint32                 `protobuf:"varint,21,opt,name=unique_destinations,json=uniqueDestinations,proto3" json:"unique_destinations,omitempty"`
	Packets_24H            uint64                 `protobuf:"varint,22,opt,name=packets_24h,json=packets24h,proto3" json:"packets_24h,omitempty"`
	LastPacketTime         *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=last_packet_time,json=lastPacketTime,proto3" json:"last_packet_time,omitempty"`
	GatewayPacketCount_24H uint64                 `protobuf:"varint,24,opt,name=gateway_packet_count_24h,json=gatewayPacketCount24h,proto3" json:"gateway_packet_count_24h,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{11}
}

func (x *Node) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *Node) GetHexId() string {
	if x != nil {
		return x.HexId
	}
	return ""
}

func (x *Node) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Node) GetLongName() string {
	if x != nil {
		return x.LongName
	}
	return ""
}

func (x *Node) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *Node) GetHardwareModel() string {
	if x != nil {
		return x.HardwareModel
	}
	return ""
}

func (x *Node) GetHardwareModelName() string {
	if x != nil {
		return x.HardwareModelName
	}
	return ""
}

func (x *Node) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *Node) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *Node) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Node) GetRegionName() string {
	if x != nil {
		return x.RegionName
	}
	return ""
}

func (x *Node) GetModemPreset() string {
	if x != nil {
		return x.ModemPreset
	}
	return ""
}

func (x *Node) GetModemPresetName() string {
	if x != nil {
		return x.ModemPresetName
	}
	return ""
}

func (x *Node) GetFirstSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *Node) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *Node) GetAvgRssi() float64 {
	if x != nil {
		return x.AvgRssi
	}
	return 0
}

func (x *Node) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

func (x *Node) GetAvgHops() float64 {
	if x != nil {
		return x.AvgHops
	}
	return 0
}

func (x *Node) GetTotalPackets() uint64 {
	if x != nil {
		return x.TotalPackets
	}
	return 0
}

func (x *Node) GetUniqueGateways() uint32 {
	if x != nil {
		return x.UniqueGateways
	}
	return 0
}

func (x *Node) GetUniqueDestinations() uint32 {
	if x != nil {
		return x.UniqueDestinations
	}
	return 0
}

func (x *Node) GetPackets_24H() uint64 {
	if x != nil {
		return x.Packets_24H
	}
	return 0
}

func (x *Node) GetLastPacketTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPacketTime
	}
	return nil
}

func (x *Node) GetGatewayPacketCount_24H() uint64 {
	if x != nil {
		return x.GatewayPacketCount_24H
	}
	return 0
}

type NodeGatewayMetric struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Packets       uint64                 `protobuf:"varint,2,opt,name=packets,proto3" json:"packets,omitempty"`
	AvgRssi       float64                `protobuf:"fixed64,3,opt,name=avg_rssi,json=avgRssi,proto3" json:"avg_rssi,omitempty"`
	AvgSnr        float64                `protobuf:"fixed64,4,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeGatewayMetric) Reset() {
	*x = NodeGatewayMetric{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeGatewayMetric) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeGatewayMetric) ProtoMessage() {}

func (x *NodeGatewayMetric) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeGatewayMetric.ProtoReflect.Descriptor instead.
func (*NodeGatewayMetric) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{12}
}

func (x *NodeGatewayMetric) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *NodeGatewayMetric) GetPackets() uint64 {
	if x != nil {
		return x.Packets
	}
	return 0
}

func (x *NodeGatewayMetric) GetAvgRssi() float64 {
	if x != nil {
		return x.AvgRssi
	}
	return 0
}

func (x *NodeGatewayMetric) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

func (x *NodeGatewayMetric) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type NodeNeighbor struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NeighborNodeId uint32                 `protobuf:"varint,1,opt,name=neighbor_node_id,json=neighborNodeId,proto3" json:"neighbor_node_id,omitempty"`
	AvgSnr         float64                `protobuf:"fixed64,2,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	Observations   uint64                 `protobuf:"varint,3,opt,name=observations,proto3" json:"observations,omitempty"`
	LastSeen       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NodeNeighbor) Reset() {
	*x = NodeNeighbor{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeNeighbor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeNeighbor) ProtoMessage() {}

func (x *NodeNeighbor) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeNeighbor.ProtoReflect.Descriptor instead.
func (*NodeNeighbor) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{13}
}

func (x *NodeNeighbor) GetNeighborNodeId() uint32 {
	if x != nil {
		return x.NeighborNodeId
	}
	return 0
}

func (x *NodeNeighbor) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

func (x *NodeNeighbor) GetObservations() uint64 {
	if x != nil {
		return x.Observations
	}
	return 0
}

func (x *NodeNeighbor) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type NodeRoleSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoleName      string                 `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Count         uint64                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeRoleSummary) Reset() {
	*x = NodeRoleSummary{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeRoleSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRoleSummary) ProtoMessage() {}

func (x *NodeRoleSummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRoleSummary.ProtoReflect.Descriptor instead.
func (*NodeRoleSummary) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{14}
}

func (x *NodeRoleSummary) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *NodeRoleSummary) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ListNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *NodeFilter            `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{15}
}

func (x *ListNodesRequest) GetFilter() *NodeFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListNodesRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	Total         uint64                 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{16}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *ListNodesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListNodesResponse) GetTotal() uint64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{17}
}

func (x *GetNodeRequest) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{18}
}

func (x *GetNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type GatewayFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayFilter) Reset() {
	*x = GatewayFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayFilter) ProtoMessage() {}

func (x *GatewayFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayFilter.ProtoReflect.Descriptor instead.
func (*GatewayFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{19}
}

func (x *GatewayFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type GatewayStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	PacketsTotal  uint64                 `protobuf:"varint,2,opt,name=packets_total,json=packetsTotal,proto3" json:"packets_total,omitempty"`
	DistinctNodes uint32                 `protobuf:"varint,3,opt,name=distinct_nodes,json=distinctNodes,proto3" json:"distinct_nodes,omitempty"`
	FirstSeen     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	AvgRssi       float64                `protobuf:"fixed64,6,opt,name=avg_rssi,json=avgRssi,proto3" json:"avg_rssi,omitempty"`
	AvgSnr        float64                `protobuf:"fixed64,7,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayStat) Reset() {
	*x = GatewayStat{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayStat) ProtoMessage() {}

func (x *GatewayStat) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayStat.ProtoReflect.Descriptor instead.
func (*GatewayStat) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{20}
}

func (x *GatewayStat) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *GatewayStat) GetPacketsTotal() uint64 {
	if x != nil {
		return x.PacketsTotal
	}
	return 0
}

func (x *GatewayStat) GetDistinctNodes() uint32 {
	if x != nil {
		return x.DistinctNodes
	}
	return 0
}

func (x *GatewayStat) GetFirstSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *GatewayStat) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *GatewayStat) GetAvgRssi() float64 {
	if x != nil {
		return x.AvgRssi
	}
	return 0
}

func (x *GatewayStat) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

type GatewayStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stats         []*GatewayStat         `protobuf:"bytes,1,rep,name=stats,proto3" json:"stats,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GatewayStatsResponse) Reset() {
	*x = GatewayStatsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayStatsResponse) ProtoMessage() {}

func (x *GatewayStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayStatsResponse.ProtoReflect.Descriptor instead.
func (*GatewayStatsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{21}
}

func (x *GatewayStatsResponse) GetStats() []*GatewayStat {
	if x != nil {
		return x.Stats
	}
	return nil
}

type LinkFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	ChannelId     string                 `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	FromNodeId    uint32                 `protobuf:"varint,3,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId      uint32                 `protobuf:"varint,4,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkFilter) Reset() {
	*x = LinkFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkFilter) ProtoMessage() {}

func (x *LinkFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkFilter.ProtoReflect.Descriptor instead.
func (*LinkFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{22}
}

func (x *LinkFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *LinkFilter) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *LinkFilter) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *LinkFilter) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

type LinkAggregate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	ChannelId     string                 `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	FromNodeId    uint32                 `protobuf:"varint,3,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId      uint32                 `protobuf:"varint,4,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	PacketsTotal  uint64                 `protobuf:"varint,5,opt,name=packets_total,json=packetsTotal,proto3" json:"packets_total,omitempty"`
	FirstSeen     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	AvgRssi       float64                `protobuf:"fixed64,8,opt,name=avg_rssi,json=avgRssi,proto3" json:"avg_rssi,omitempty"`
	AvgSnr        float64                `protobuf:"fixed64,9,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	MaxHopIndex   uint32                 `protobuf:"varint,10,opt,name=max_hop_index,json=maxHopIndex,proto3" json:"max_hop_index,omitempty"`
	MaxHopLimit   uint32                 `protobuf:"varint,11,opt,name=max_hop_limit,json=maxHopLimit,proto3" json:"max_hop_limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LinkAggregate) Reset() {
	*x = LinkAggregate{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkAggregate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkAggregate) ProtoMessage() {}

func (x *LinkAggregate) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkAggregate.ProtoReflect.Descriptor instead.
func (*LinkAggregate) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{23}
}

func (x *LinkAggregate) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *LinkAggregate) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *LinkAggregate) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *LinkAggregate) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *LinkAggregate) GetPacketsTotal() uint64 {
	if x != nil {
		return x.PacketsTotal
	}
	return 0
}

func (x *LinkAggregate) GetFirstSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *LinkAggregate) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *LinkAggregate) GetAvgRssi() float64 {
	if x != nil {
		return x.AvgRssi
	}
	return 0
}

func (x *LinkAggregate) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

func (x *LinkAggregate) GetMaxHopIndex() uint32 {
	if x != nil {
		return x.MaxHopIndex
	}
	return 0
}

func (x *LinkAggregate) GetMaxHopLimit() uint32 {
	if x != nil {
		return x.MaxHopLimit
	}
	return 0
}

type ListLinksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *LinkFilter            `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLinksRequest) Reset() {
	*x = ListLinksRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksRequest) ProtoMessage() {}

func (x *ListLinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksRequest.ProtoReflect.Descriptor instead.
func (*ListLinksRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{24}
}

func (x *ListLinksRequest) GetFilter() *LinkFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListLinksRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListLinksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Links         []*LinkAggregate       `protobuf:"bytes,1,rep,name=links,proto3" json:"links,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLinksResponse) Reset() {
	*x = ListLinksResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLinksResponse) ProtoMessage() {}

func (x *ListLinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLinksResponse.ProtoReflect.Descriptor instead.
func (*ListLinksResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{25}
}

func (x *ListLinksResponse) GetLinks() []*LinkAggregate {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *ListLinksResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type TracerouteFilter struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OriginNodeId      uint32                 `protobuf:"varint,1,opt,name=origin_node_id,json=originNodeId,proto3" json:"origin_node_id,omitempty"`
	DestinationNodeId uint32                 `protobuf:"varint,2,opt,name=destination_node_id,json=destinationNodeId,proto3" json:"destination_node_id,omitempty"`
	GatewayId         string                 `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TracerouteFilter) Reset() {
	*x = TracerouteFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteFilter) ProtoMessage() {}

func (x *TracerouteFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteFilter.ProtoReflect.Descriptor instead.
func (*TracerouteFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{26}
}

func (x *TracerouteFilter) GetOriginNodeId() uint32 {
	if x != nil {
		return x.OriginNodeId
	}
	return 0
}

func (x *TracerouteFilter) GetDestinationNodeId() uint32 {
	if x != nil {
		return x.DestinationNodeId
	}
	return 0
}

func (x *TracerouteFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type TraceroutePath struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	OriginNodeId      uint32                 `protobuf:"varint,1,opt,name=origin_node_id,json=originNodeId,proto3" json:"origin_node_id,omitempty"`
	DestinationNodeId uint32                 `protobuf:"varint,2,opt,name=destination_node_id,json=destinationNodeId,proto3" json:"destination_node_id,omitempty"`
	GatewayId         string                 `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	MaxHops           uint32                 `protobuf:"varint,4,opt,name=max_hops,json=maxHops,proto3" json:"max_hops,omitempty"`
	Observations      uint64                 `protobuf:"varint,5,opt,name=observations,proto3" json:"observations,omitempty"`
	FirstSeen         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=first_seen,json=firstSeen,proto3" json:"first_seen,omitempty"`
	LastSeen          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TraceroutePath) Reset() {
	*x = TraceroutePath{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceroutePath) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceroutePath) ProtoMessage() {}

func (x *TraceroutePath) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceroutePath.ProtoReflect.Descriptor instead.
func (*TraceroutePath) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{27}
}

func (x *TraceroutePath) GetOriginNodeId() uint32 {
	if x != nil {
		return x.OriginNodeId
	}
	return 0
}

func (x *TraceroutePath) GetDestinationNodeId() uint32 {
	if x != nil {
		return x.DestinationNodeId
	}
	return 0
}

func (x *TraceroutePath) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TraceroutePath) GetMaxHops() uint32 {
	if x != nil {
		return x.MaxHops
	}
	return 0
}

func (x *TraceroutePath) GetObservations() uint64 {
	if x != nil {
		return x.Observations
	}
	return 0
}

func (x *TraceroutePath) GetFirstSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.FirstSeen
	}
	return nil
}

func (x *TraceroutePath) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

type ListTraceroutesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *TracerouteFilter      `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTraceroutesRequest) Reset() {
	*x = ListTraceroutesRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTraceroutesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTraceroutesRequest) ProtoMessage() {}

func (x *ListTraceroutesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTraceroutesRequest.ProtoReflect.Descriptor instead.
func (*ListTraceroutesRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{28}
}

func (x *ListTraceroutesRequest) GetFilter() *TracerouteFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListTraceroutesRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListTraceroutesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []*TraceroutePath      `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTraceroutesResponse) Reset() {
	*x = ListTraceroutesResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTraceroutesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTraceroutesResponse) ProtoMessage() {}

func (x *ListTraceroutesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTraceroutesResponse.ProtoReflect.Descriptor instead.
func (*ListTraceroutesResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{29}
}

func (x *ListTraceroutesResponse) GetPaths() []*TraceroutePath {
	if x != nil {
		return x.Paths
	}
	return nil
}

func (x *ListTraceroutesResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type RangeTestFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromNodeId    uint32                 `protobuf:"varint,1,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId      uint32                 `protobuf:"varint,2,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	GatewayId     string                 `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeTestFilter) Reset() {
	*x = RangeTestFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeTestFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeTestFilter) ProtoMessage() {}

func (x *RangeTestFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeTestFilter.ProtoReflect.Descriptor instead.
func (*RangeTestFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{30}
}

func (x *RangeTestFilter) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *RangeTestFilter) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *RangeTestFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type RangeTestResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PacketId      uint64                 `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	FromNodeId    uint32                 `protobuf:"varint,2,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId      uint32                 `protobuf:"varint,3,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	GatewayId     string                 `protobuf:"bytes,4,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	ReceivedAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	Rssi          int32                  `protobuf:"zigzag32,6,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Snr           float64                `protobuf:"fixed64,7,opt,name=snr,proto3" json:"snr,omitempty"`
	HopLimit      uint32                 `protobuf:"varint,8,opt,name=hop_limit,json=hopLimit,proto3" json:"hop_limit,omitempty"`
	HopStart      uint32                 `protobuf:"varint,9,opt,name=hop_start,json=hopStart,proto3" json:"hop_start,omitempty"`
	Payload       []byte                 `protobuf:"bytes,10,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RangeTestResult) Reset() {
	*x = RangeTestResult{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RangeTestResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RangeTestResult) ProtoMessage() {}

func (x *RangeTestResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RangeTestResult.ProtoReflect.Descriptor instead.
func (*RangeTestResult) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{31}
}

func (x *RangeTestResult) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *RangeTestResult) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *RangeTestResult) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *RangeTestResult) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *RangeTestResult) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *RangeTestResult) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *RangeTestResult) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *RangeTestResult) GetHopLimit() uint32 {
	if x != nil {
		return x.HopLimit
	}
	return 0
}

func (x *RangeTestResult) GetHopStart() uint32 {
	if x != nil {
		return x.HopStart
	}
	return 0
}

func (x *RangeTestResult) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ListRangeTestsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *RangeTestFilter       `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRangeTestsRequest) Reset() {
	*x = ListRangeTestsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRangeTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeTestsRequest) ProtoMessage() {}

func (x *ListRangeTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRangeTestsRequest.ProtoReflect.Descriptor instead.
func (*ListRangeTestsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{32}
}

func (x *ListRangeTestsRequest) GetFilter() *RangeTestFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListRangeTestsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListRangeTestsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*RangeTestResult     `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRangeTestsResponse) Reset() {
	*x = ListRangeTestsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRangeTestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRangeTestsResponse) ProtoMessage() {}

func (x *ListRangeTestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRangeTestsResponse.ProtoReflect.Descriptor instead.
func (*ListRangeTestsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{33}
}

func (x *ListRangeTestsResponse) GetResults() []*RangeTestResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ListRangeTestsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type StoreForwardEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PacketId      uint64                 `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	ReceivedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	GatewayId     string                 `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Variant       string                 `protobuf:"bytes,4,opt,name=variant,proto3" json:"variant,omitempty"`
	Payload       []byte                 `protobuf:"bytes,5,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreForwardEvent) Reset() {
	*x = StoreForwardEvent{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreForwardEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreForwardEvent) ProtoMessage() {}

func (x *StoreForwardEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreForwardEvent.ProtoReflect.Descriptor instead.
func (*StoreForwardEvent) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{34}
}

func (x *StoreForwardEvent) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *StoreForwardEvent) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *StoreForwardEvent) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *StoreForwardEvent) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

func (x *StoreForwardEvent) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type ListStoreForwardRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStoreForwardRequest) Reset() {
	*x = ListStoreForwardRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoreForwardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoreForwardRequest) ProtoMessage() {}

func (x *ListStoreForwardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoreForwardRequest.ProtoReflect.Descriptor instead.
func (*ListStoreForwardRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{35}
}

func (x *ListStoreForwardRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *ListStoreForwardRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListStoreForwardResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*StoreForwardEvent   `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListStoreForwardResponse) Reset() {
	*x = ListStoreForwardResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListStoreForwardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStoreForwardResponse) ProtoMessage() {}

func (x *ListStoreForwardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStoreForwardResponse.ProtoReflect.Descriptor instead.
func (*ListStoreForwardResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{36}
}

func (x *ListStoreForwardResponse) GetEvents() []*StoreForwardEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *ListStoreForwardResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type PaxcounterSample struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PacketId      uint64                 `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	ReceivedAt    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	GatewayId     string                 `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Wifi          uint32                 `protobuf:"varint,4,opt,name=wifi,proto3" json:"wifi,omitempty"`
	Ble           uint32                 `protobuf:"varint,5,opt,name=ble,proto3" json:"ble,omitempty"`
	UptimeSeconds uint32                 `protobuf:"varint,6,opt,name=uptime_seconds,json=uptimeSeconds,proto3" json:"uptime_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaxcounterSample) Reset() {
	*x = PaxcounterSample{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaxcounterSample) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaxcounterSample) ProtoMessage() {}

func (x *PaxcounterSample) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaxcounterSample.ProtoReflect.Descriptor instead.
func (*PaxcounterSample) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{37}
}

func (x *PaxcounterSample) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *PaxcounterSample) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

func (x *PaxcounterSample) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *PaxcounterSample) GetWifi() uint32 {
	if x != nil {
		return x.Wifi
	}
	return 0
}

func (x *PaxcounterSample) GetBle() uint32 {
	if x != nil {
		return x.Ble
	}
	return 0
}

func (x *PaxcounterSample) GetUptimeSeconds() uint32 {
	if x != nil {
		return x.UptimeSeconds
	}
	return 0
}

type ListPaxcounterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPaxcounterRequest) Reset() {
	*x = ListPaxcounterRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPaxcounterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaxcounterRequest) ProtoMessage() {}

func (x *ListPaxcounterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaxcounterRequest.ProtoReflect.Descriptor instead.
func (*ListPaxcounterRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{38}
}

func (x *ListPaxcounterRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *ListPaxcounterRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListPaxcounterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Samples       []*PaxcounterSample    `protobuf:"bytes,1,rep,name=samples,proto3" json:"samples,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPaxcounterResponse) Reset() {
	*x = ListPaxcounterResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPaxcounterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPaxcounterResponse) ProtoMessage() {}

func (x *ListPaxcounterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPaxcounterResponse.ProtoReflect.Descriptor instead.
func (*ListPaxcounterResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{39}
}

func (x *ListPaxcounterResponse) GetSamples() []*PaxcounterSample {
	if x != nil {
		return x.Samples
	}
	return nil
}

func (x *ListPaxcounterResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type NodeLocationFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeIds       []uint32               `protobuf:"varint,1,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	GatewayId     string                 `protobuf:"bytes,3,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeLocationFilter) Reset() {
	*x = NodeLocationFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeLocationFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLocationFilter) ProtoMessage() {}

func (x *NodeLocationFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLocationFilter.ProtoReflect.Descriptor instead.
func (*NodeLocationFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{40}
}

func (x *NodeLocationFilter) GetNodeIds() []uint32 {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *NodeLocationFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *NodeLocationFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type NodeLocation struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeId          uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Latitude        float64                `protobuf:"fixed64,2,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude       float64                `protobuf:"fixed64,3,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Altitude        int32                  `protobuf:"varint,4,opt,name=altitude,proto3" json:"altitude,omitempty"`
	AgeHours        float64                `protobuf:"fixed64,5,opt,name=age_hours,json=ageHours,proto3" json:"age_hours,omitempty"`
	DisplayName     string                 `protobuf:"bytes,6,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	PrimaryChannel  string                 `protobuf:"bytes,7,opt,name=primary_channel,json=primaryChannel,proto3" json:"primary_channel,omitempty"`
	SatsInView      uint32                 `protobuf:"varint,8,opt,name=sats_in_view,json=satsInView,proto3" json:"sats_in_view,omitempty"`
	PrecisionMeters float64                `protobuf:"fixed64,9,opt,name=precision_meters,json=precisionMeters,proto3" json:"precision_meters,omitempty"`
	Timestamp       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	GatewayId       string                 `protobuf:"bytes,11,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *NodeLocation) Reset() {
	*x = NodeLocation{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeLocation) ProtoMessage() {}

func (x *NodeLocation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeLocation.ProtoReflect.Descriptor instead.
func (*NodeLocation) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{41}
}

func (x *NodeLocation) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeLocation) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *NodeLocation) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *NodeLocation) GetAltitude() int32 {
	if x != nil {
		return x.Altitude
	}
	return 0
}

func (x *NodeLocation) GetAgeHours() float64 {
	if x != nil {
		return x.AgeHours
	}
	return 0
}

func (x *NodeLocation) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *NodeLocation) GetPrimaryChannel() string {
	if x != nil {
		return x.PrimaryChannel
	}
	return ""
}

func (x *NodeLocation) GetSatsInView() uint32 {
	if x != nil {
		return x.SatsInView
	}
	return 0
}

func (x *NodeLocation) GetPrecisionMeters() float64 {
	if x != nil {
		return x.PrecisionMeters
	}
	return 0
}

func (x *NodeLocation) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NodeLocation) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type ListNodeLocationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *NodeLocationFilter    `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeLocationsRequest) Reset() {
	*x = ListNodeLocationsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeLocationsRequest) ProtoMessage() {}

func (x *ListNodeLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeLocationsRequest.ProtoReflect.Descriptor instead.
func (*ListNodeLocationsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{42}
}

func (x *ListNodeLocationsRequest) GetFilter() *NodeLocationFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListNodeLocationsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListNodeLocationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locations     []*NodeLocation        `protobuf:"bytes,1,rep,name=locations,proto3" json:"locations,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeLocationsResponse) Reset() {
	*x = ListNodeLocationsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeLocationsResponse) ProtoMessage() {}

func (x *ListNodeLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeLocationsResponse.ProtoReflect.Descriptor instead.
func (*ListNodeLocationsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{43}
}

func (x *ListNodeLocationsResponse) GetLocations() []*NodeLocation {
	if x != nil {
		return x.Locations
	}
	return nil
}

func (x *ListNodeLocationsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type ChatWindowFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChannelId     string                 `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Audience      string                 `protobuf:"bytes,2,opt,name=audience,proto3" json:"audience,omitempty"`
	SenderNodeId  uint32                 `protobuf:"varint,3,opt,name=sender_node_id,json=senderNodeId,proto3" json:"sender_node_id,omitempty"`
	Search        string                 `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	NodeId        uint32                 `protobuf:"varint,5,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatWindowFilter) Reset() {
	*x = ChatWindowFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatWindowFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatWindowFilter) ProtoMessage() {}

func (x *ChatWindowFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatWindowFilter.ProtoReflect.Descriptor instead.
func (*ChatWindowFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{44}
}

func (x *ChatWindowFilter) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChatWindowFilter) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *ChatWindowFilter) GetSenderNodeId() uint32 {
	if x != nil {
		return x.SenderNodeId
	}
	return 0
}

func (x *ChatWindowFilter) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ChatWindowFilter) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type ChatMessageGateway struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Rssi          int32                  `protobuf:"zigzag32,2,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Snr           float64                `protobuf:"fixed64,3,opt,name=snr,proto3" json:"snr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageGateway) Reset() {
	*x = ChatMessageGateway{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageGateway) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageGateway) ProtoMessage() {}

func (x *ChatMessageGateway) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageGateway.ProtoReflect.Descriptor instead.
func (*ChatMessageGateway) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{45}
}

func (x *ChatMessageGateway) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *ChatMessageGateway) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *ChatMessageGateway) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

type ChatMessage struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	PacketId              uint64                 `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	Timestamp             *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	FromNodeId            uint32                 `protobuf:"varint,3,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId              uint32                 `protobuf:"varint,4,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	ChannelId             string                 `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Audience              string                 `protobuf:"bytes,6,opt,name=audience,proto3" json:"audience,omitempty"`
	Text                  string                 `protobuf:"bytes,7,opt,name=text,proto3" json:"text,omitempty"`
	Gateways              []*ChatMessageGateway  `protobuf:"bytes,8,rep,name=gateways,proto3" json:"gateways,omitempty"`
	ProcessedSuccessfully bool                   `protobuf:"varint,9,opt,name=processed_successfully,json=processedSuccessfully,proto3" json:"processed_successfully,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{46}
}

func (x *ChatMessage) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *ChatMessage) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ChatMessage) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *ChatMessage) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *ChatMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChatMessage) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ChatMessage) GetGateways() []*ChatMessageGateway {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *ChatMessage) GetProcessedSuccessfully() bool {
	if x != nil {
		return x.ProcessedSuccessfully
	}
	return false
}

type ChatWindowCounters struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages_1H   uint64                 `protobuf:"varint,1,opt,name=messages_1h,json=messages1h,proto3" json:"messages_1h,omitempty"`
	Messages_6H   uint64                 `protobuf:"varint,2,opt,name=messages_6h,json=messages6h,proto3" json:"messages_6h,omitempty"`
	Messages_24H  uint64                 `protobuf:"varint,3,opt,name=messages_24h,json=messages24h,proto3" json:"messages_24h,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatWindowCounters) Reset() {
	*x = ChatWindowCounters{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatWindowCounters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatWindowCounters) ProtoMessage() {}

func (x *ChatWindowCounters) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatWindowCounters.ProtoReflect.Descriptor instead.
func (*ChatWindowCounters) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{47}
}

func (x *ChatWindowCounters) GetMessages_1H() uint64 {
	if x != nil {
		return x.Messages_1H
	}
	return 0
}

func (x *ChatWindowCounters) GetMessages_6H() uint64 {
	if x != nil {
		return x.Messages_6H
	}
	return 0
}

func (x *ChatWindowCounters) GetMessages_24H() uint64 {
	if x != nil {
		return x.Messages_24H
	}
	return 0
}

type GetChatWindowRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *ChatWindowFilter      `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	WindowStart   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=window_start,json=windowStart,proto3" json:"window_start,omitempty"`
	WindowHours   uint32                 `protobuf:"varint,3,opt,name=window_hours,json=windowHours,proto3" json:"window_hours,omitempty"`
	Before        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=before,proto3" json:"before,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatWindowRequest) Reset() {
	*x = GetChatWindowRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatWindowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatWindowRequest) ProtoMessage() {}

func (x *GetChatWindowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatWindowRequest.ProtoReflect.Descriptor instead.
func (*GetChatWindowRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{48}
}

func (x *GetChatWindowRequest) GetFilter() *ChatWindowFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *GetChatWindowRequest) GetWindowStart() *timestamppb.Timestamp {
	if x != nil {
		return x.WindowStart
	}
	return nil
}

func (x *GetChatWindowRequest) GetWindowHours() uint32 {
	if x != nil {
		return x.WindowHours
	}
	return 0
}

func (x *GetChatWindowRequest) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *GetChatWindowRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type GetChatWindowResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*ChatMessage         `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	Counters      *ChatWindowCounters    `protobuf:"bytes,2,opt,name=counters,proto3" json:"counters,omitempty"`
	WindowStart   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=window_start,json=windowStart,proto3" json:"window_start,omitempty"`
	WindowHours   uint32                 `protobuf:"varint,4,opt,name=window_hours,json=windowHours,proto3" json:"window_hours,omitempty"`
	NextCursor    string                 `protobuf:"bytes,5,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatWindowResponse) Reset() {
	*x = GetChatWindowResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatWindowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatWindowResponse) ProtoMessage() {}

func (x *GetChatWindowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatWindowResponse.ProtoReflect.Descriptor instead.
func (*GetChatWindowResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{49}
}

func (x *GetChatWindowResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetChatWindowResponse) GetCounters() *ChatWindowCounters {
	if x != nil {
		return x.Counters
	}
	return nil
}

func (x *GetChatWindowResponse) GetWindowStart() *timestamppb.Timestamp {
	if x != nil {
		return x.WindowStart
	}
	return nil
}

func (x *GetChatWindowResponse) GetWindowHours() uint32 {
	if x != nil {
		return x.WindowHours
	}
	return 0
}

func (x *GetChatWindowResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type NodeAnalytics struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Packets_24H    uint64                 `protobuf:"varint,1,opt,name=packets_24h,json=packets24h,proto3" json:"packets_24h,omitempty"`
	Packets_7D     uint64                 `protobuf:"varint,2,opt,name=packets_7d,json=packets7d,proto3" json:"packets_7d,omitempty"`
	LastPacketTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_packet_time,json=lastPacketTime,proto3" json:"last_packet_time,omitempty"`
	Gateways       []*NodeGatewayMetric   `protobuf:"bytes,4,rep,name=gateways,proto3" json:"gateways,omitempty"`
	Neighbors      []*NodeNeighbor        `protobuf:"bytes,5,rep,name=neighbors,proto3" json:"neighbors,omitempty"`
	Roles          []*NodeRoleSummary     `protobuf:"bytes,6,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NodeAnalytics) Reset() {
	*x = NodeAnalytics{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeAnalytics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAnalytics) ProtoMessage() {}

func (x *NodeAnalytics) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAnalytics.ProtoReflect.Descriptor instead.
func (*NodeAnalytics) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{50}
}

func (x *NodeAnalytics) GetPackets_24H() uint64 {
	if x != nil {
		return x.Packets_24H
	}
	return 0
}

func (x *NodeAnalytics) GetPackets_7D() uint64 {
	if x != nil {
		return x.Packets_7D
	}
	return 0
}

func (x *NodeAnalytics) GetLastPacketTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPacketTime
	}
	return nil
}

func (x *NodeAnalytics) GetGateways() []*NodeGatewayMetric {
	if x != nil {
		return x.Gateways
	}
	return nil
}

func (x *NodeAnalytics) GetNeighbors() []*NodeNeighbor {
	if x != nil {
		return x.Neighbors
	}
	return nil
}

func (x *NodeAnalytics) GetRoles() []*NodeRoleSummary {
	if x != nil {
		return x.Roles
	}
	return nil
}

type GetNodeAnalyticsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeAnalyticsRequest) Reset() {
	*x = GetNodeAnalyticsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeAnalyticsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeAnalyticsRequest) ProtoMessage() {}

func (x *GetNodeAnalyticsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeAnalyticsRequest.ProtoReflect.Descriptor instead.
func (*GetNodeAnalyticsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{51}
}

func (x *GetNodeAnalyticsRequest) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type GetNodeAnalyticsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Analytics     *NodeAnalytics         `protobuf:"bytes,2,opt,name=analytics,proto3" json:"analytics,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeAnalyticsResponse) Reset() {
	*x = GetNodeAnalyticsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeAnalyticsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeAnalyticsResponse) ProtoMessage() {}

func (x *GetNodeAnalyticsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeAnalyticsResponse.ProtoReflect.Descriptor instead.
func (*GetNodeAnalyticsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{52}
}

func (x *GetNodeAnalyticsResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetNodeAnalyticsResponse) GetAnalytics() *NodeAnalytics {
	if x != nil {
		return x.Analytics
	}
	return nil
}

type GetGatewayOverviewRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         uint32                 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	GatewayId     string                 `protobuf:"bytes,2,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewayOverviewRequest) Reset() {
	*x = GetGatewayOverviewRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayOverviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayOverviewRequest) ProtoMessage() {}

func (x *GetGatewayOverviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayOverviewRequest.ProtoReflect.Descriptor instead.
func (*GetGatewayOverviewRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{53}
}

func (x *GetGatewayOverviewRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetGatewayOverviewRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

type GatewayOverview struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	GatewayId                 string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	PacketCount               uint64                 `protobuf:"varint,2,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	UniqueSources             uint32                 `protobuf:"varint,3,opt,name=unique_sources,json=uniqueSources,proto3" json:"unique_sources,omitempty"`
	AvgRssi                   float64                `protobuf:"fixed64,4,opt,name=avg_rssi,json=avgRssi,proto3" json:"avg_rssi,omitempty"`
	AvgSnr                    float64                `protobuf:"fixed64,5,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	LastSeen                  *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_seen,json=lastSeen,proto3" json:"last_seen,omitempty"`
	DiversityScore            float64                `protobuf:"fixed64,7,opt,name=diversity_score,json=diversityScore,proto3" json:"diversity_score,omitempty"`
	NodesWithMultipleGateways uint32                 `protobuf:"varint,8,opt,name=nodes_with_multiple_gateways,json=nodesWithMultipleGateways,proto3" json:"nodes_with_multiple_gateways,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *GatewayOverview) Reset() {
	*x = GatewayOverview{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GatewayOverview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GatewayOverview) ProtoMessage() {}

func (x *GatewayOverview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GatewayOverview.ProtoReflect.Descriptor instead.
func (*GatewayOverview) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{54}
}

func (x *GatewayOverview) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *GatewayOverview) GetPacketCount() uint64 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *GatewayOverview) GetUniqueSources() uint32 {
	if x != nil {
		return x.UniqueSources
	}
	return 0
}

func (x *GatewayOverview) GetAvgRssi() float64 {
	if x != nil {
		return x.AvgRssi
	}
	return 0
}

func (x *GatewayOverview) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

func (x *GatewayOverview) GetLastSeen() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeen
	}
	return nil
}

func (x *GatewayOverview) GetDiversityScore() float64 {
	if x != nil {
		return x.DiversityScore
	}
	return 0
}

func (x *GatewayOverview) GetNodesWithMultipleGateways() uint32 {
	if x != nil {
		return x.NodesWithMultipleGateways
	}
	return 0
}

type GetGatewayOverviewResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gateways      []*GatewayOverview     `protobuf:"bytes,1,rep,name=gateways,proto3" json:"gateways,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGatewayOverviewResponse) Reset() {
	*x = GetGatewayOverviewResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGatewayOverviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGatewayOverviewResponse) ProtoMessage() {}

func (x *GetGatewayOverviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGatewayOverviewResponse.ProtoReflect.Descriptor instead.
func (*GetGatewayOverviewResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{55}
}

func (x *GetGatewayOverviewResponse) GetGateways() []*GatewayOverview {
	if x != nil {
		return x.Gateways
	}
	return nil
}

type PacketSuccessStats struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalPackets        uint64                 `protobuf:"varint,1,opt,name=total_packets,json=totalPackets,proto3" json:"total_packets,omitempty"`
	SuccessfulPackets   uint64                 `protobuf:"varint,2,opt,name=successful_packets,json=successfulPackets,proto3" json:"successful_packets,omitempty"`
	AveragePayloadBytes float64                `protobuf:"fixed64,3,opt,name=average_payload_bytes,json=averagePayloadBytes,proto3" json:"average_payload_bytes,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *PacketSuccessStats) Reset() {
	*x = PacketSuccessStats{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PacketSuccessStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketSuccessStats) ProtoMessage() {}

func (x *PacketSuccessStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketSuccessStats.ProtoReflect.Descriptor instead.
func (*PacketSuccessStats) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{56}
}

func (x *PacketSuccessStats) GetTotalPackets() uint64 {
	if x != nil {
		return x.TotalPackets
	}
	return 0
}

func (x *PacketSuccessStats) GetSuccessfulPackets() uint64 {
	if x != nil {
		return x.SuccessfulPackets
	}
	return 0
}

func (x *PacketSuccessStats) GetAveragePayloadBytes() float64 {
	if x != nil {
		return x.AveragePayloadBytes
	}
	return 0
}

type NodeActivityBucket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Label         string                 `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	NodeCount     uint64                 `protobuf:"varint,2,opt,name=node_count,json=nodeCount,proto3" json:"node_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeActivityBucket) Reset() {
	*x = NodeActivityBucket{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeActivityBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeActivityBucket) ProtoMessage() {}

func (x *NodeActivityBucket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeActivityBucket.ProtoReflect.Descriptor instead.
func (*NodeActivityBucket) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{57}
}

func (x *NodeActivityBucket) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *NodeActivityBucket) GetNodeCount() uint64 {
	if x != nil {
		return x.NodeCount
	}
	return 0
}

type SignalQualitySummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AvgRssi       float64                `protobuf:"fixed64,1,opt,name=avg_rssi,json=avgRssi,proto3" json:"avg_rssi,omitempty"`
	AvgSnr        float64                `protobuf:"fixed64,2,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignalQualitySummary) Reset() {
	*x = SignalQualitySummary{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignalQualitySummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignalQualitySummary) ProtoMessage() {}

func (x *SignalQualitySummary) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignalQualitySummary.ProtoReflect.Descriptor instead.
func (*SignalQualitySummary) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{58}
}

func (x *SignalQualitySummary) GetAvgRssi() float64 {
	if x != nil {
		return x.AvgRssi
	}
	return 0
}

func (x *SignalQualitySummary) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

type TemporalBucket struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BucketStart   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=bucket_start,json=bucketStart,proto3" json:"bucket_start,omitempty"`
	Packets       uint64                 `protobuf:"varint,2,opt,name=packets,proto3" json:"packets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TemporalBucket) Reset() {
	*x = TemporalBucket{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TemporalBucket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TemporalBucket) ProtoMessage() {}

func (x *TemporalBucket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TemporalBucket.ProtoReflect.Descriptor instead.
func (*TemporalBucket) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{59}
}

func (x *TemporalBucket) GetBucketStart() *timestamppb.Timestamp {
	if x != nil {
		return x.BucketStart
	}
	return nil
}

func (x *TemporalBucket) GetPackets() uint64 {
	if x != nil {
		return x.Packets
	}
	return 0
}

type TopNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Packets       uint64                 `protobuf:"varint,3,opt,name=packets,proto3" json:"packets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TopNode) Reset() {
	*x = TopNode{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TopNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopNode) ProtoMessage() {}

func (x *TopNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopNode.ProtoReflect.Descriptor instead.
func (*TopNode) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{60}
}

func (x *TopNode) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *TopNode) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *TopNode) GetPackets() uint64 {
	if x != nil {
		return x.Packets
	}
	return 0
}

type DistributionEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Count         uint64                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DistributionEntry) Reset() {
	*x = DistributionEntry{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DistributionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DistributionEntry) ProtoMessage() {}

func (x *DistributionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DistributionEntry.ProtoReflect.Descriptor instead.
func (*DistributionEntry) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{61}
}

func (x *DistributionEntry) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *DistributionEntry) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type GetAnalyticsSummaryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	FromNodeId    uint32                 `protobuf:"varint,2,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	HopCount      int32                  `protobuf:"varint,3,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAnalyticsSummaryRequest) Reset() {
	*x = GetAnalyticsSummaryRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnalyticsSummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalyticsSummaryRequest) ProtoMessage() {}

func (x *GetAnalyticsSummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalyticsSummaryRequest.ProtoReflect.Descriptor instead.
func (*GetAnalyticsSummaryRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{62}
}

func (x *GetAnalyticsSummaryRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *GetAnalyticsSummaryRequest) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *GetAnalyticsSummaryRequest) GetHopCount() int32 {
	if x != nil {
		return x.HopCount
	}
	return 0
}

type GetAnalyticsSummaryResponse struct {
	state                  protoimpl.MessageState `protogen:"open.v1"`
	PacketSuccess          *PacketSuccessStats    `protobuf:"bytes,1,opt,name=packet_success,json=packetSuccess,proto3" json:"packet_success,omitempty"`
	NodeActivity           []*NodeActivityBucket  `protobuf:"bytes,2,rep,name=node_activity,json=nodeActivity,proto3" json:"node_activity,omitempty"`
	SignalQuality          *SignalQualitySummary  `protobuf:"bytes,3,opt,name=signal_quality,json=signalQuality,proto3" json:"signal_quality,omitempty"`
	HourlyPackets          []*TemporalBucket      `protobuf:"bytes,4,rep,name=hourly_packets,json=hourlyPackets,proto3" json:"hourly_packets,omitempty"`
	TopNodes               []*TopNode             `protobuf:"bytes,5,rep,name=top_nodes,json=topNodes,proto3" json:"top_nodes,omitempty"`
	PacketTypeDistribution []*DistributionEntry   `protobuf:"bytes,6,rep,name=packet_type_distribution,json=packetTypeDistribution,proto3" json:"packet_type_distribution,omitempty"`
	GatewayDistribution    []*DistributionEntry   `protobuf:"bytes,7,rep,name=gateway_distribution,json=gatewayDistribution,proto3" json:"gateway_distribution,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *GetAnalyticsSummaryResponse) Reset() {
	*x = GetAnalyticsSummaryResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAnalyticsSummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAnalyticsSummaryResponse) ProtoMessage() {}

func (x *GetAnalyticsSummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAnalyticsSummaryResponse.ProtoReflect.Descriptor instead.
func (*GetAnalyticsSummaryResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{63}
}

func (x *GetAnalyticsSummaryResponse) GetPacketSuccess() *PacketSuccessStats {
	if x != nil {
		return x.PacketSuccess
	}
	return nil
}

func (x *GetAnalyticsSummaryResponse) GetNodeActivity() []*NodeActivityBucket {
	if x != nil {
		return x.NodeActivity
	}
	return nil
}

func (x *GetAnalyticsSummaryResponse) GetSignalQuality() *SignalQualitySummary {
	if x != nil {
		return x.SignalQuality
	}
	return nil
}

func (x *GetAnalyticsSummaryResponse) GetHourlyPackets() []*TemporalBucket {
	if x != nil {
		return x.HourlyPackets
	}
	return nil
}

func (x *GetAnalyticsSummaryResponse) GetTopNodes() []*TopNode {
	if x != nil {
		return x.TopNodes
	}
	return nil
}

func (x *GetAnalyticsSummaryResponse) GetPacketTypeDistribution() []*DistributionEntry {
	if x != nil {
		return x.PacketTypeDistribution
	}
	return nil
}

func (x *GetAnalyticsSummaryResponse) GetGatewayDistribution() []*DistributionEntry {
	if x != nil {
		return x.GatewayDistribution
	}
	return nil
}

type TracerouteHopFilter struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PacketId          uint64                 `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	OriginNodeId      uint32                 `protobuf:"varint,2,opt,name=origin_node_id,json=originNodeId,proto3" json:"origin_node_id,omitempty"`
	DestinationNodeId uint32                 `protobuf:"varint,3,opt,name=destination_node_id,json=destinationNodeId,proto3" json:"destination_node_id,omitempty"`
	GatewayId         string                 `protobuf:"bytes,4,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	RequestId         uint32                 `protobuf:"varint,5,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Direction         string                 `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TracerouteHopFilter) Reset() {
	*x = TracerouteHopFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteHopFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteHopFilter) ProtoMessage() {}

func (x *TracerouteHopFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteHopFilter.ProtoReflect.Descriptor instead.
func (*TracerouteHopFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{64}
}

func (x *TracerouteHopFilter) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *TracerouteHopFilter) GetOriginNodeId() uint32 {
	if x != nil {
		return x.OriginNodeId
	}
	return 0
}

func (x *TracerouteHopFilter) GetDestinationNodeId() uint32 {
	if x != nil {
		return x.DestinationNodeId
	}
	return 0
}

func (x *TracerouteHopFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TracerouteHopFilter) GetRequestId() uint32 {
	if x != nil {
		return x.RequestId
	}
	return 0
}

func (x *TracerouteHopFilter) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

type TracerouteHop struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PacketId          uint64                 `protobuf:"varint,2,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	OriginNodeId      uint32                 `protobuf:"varint,3,opt,name=origin_node_id,json=originNodeId,proto3" json:"origin_node_id,omitempty"`
	DestinationNodeId uint32                 `protobuf:"varint,4,opt,name=destination_node_id,json=destinationNodeId,proto3" json:"destination_node_id,omitempty"`
	GatewayId         string                 `protobuf:"bytes,5,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Direction         string                 `protobuf:"bytes,6,opt,name=direction,proto3" json:"direction,omitempty"`
	HopIndex          uint32                 `protobuf:"varint,7,opt,name=hop_index,json=hopIndex,proto3" json:"hop_index,omitempty"`
	HopNodeId         uint32                 `protobuf:"varint,8,opt,name=hop_node_id,json=hopNodeId,proto3" json:"hop_node_id,omitempty"`
	Snr               float64                `protobuf:"fixed64,9,opt,name=snr,proto3" json:"snr,omitempty"`
	ReceivedAt        *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TracerouteHop) Reset() {
	*x = TracerouteHop{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteHop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteHop) ProtoMessage() {}

func (x *TracerouteHop) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteHop.ProtoReflect.Descriptor instead.
func (*TracerouteHop) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{65}
}

func (x *TracerouteHop) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TracerouteHop) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *TracerouteHop) GetOriginNodeId() uint32 {
	if x != nil {
		return x.OriginNodeId
	}
	return 0
}

func (x *TracerouteHop) GetDestinationNodeId() uint32 {
	if x != nil {
		return x.DestinationNodeId
	}
	return 0
}

func (x *TracerouteHop) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TracerouteHop) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *TracerouteHop) GetHopIndex() uint32 {
	if x != nil {
		return x.HopIndex
	}
	return 0
}

func (x *TracerouteHop) GetHopNodeId() uint32 {
	if x != nil {
		return x.HopNodeId
	}
	return 0
}

func (x *TracerouteHop) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *TracerouteHop) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type ListTracerouteHopsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filter        *TracerouteHopFilter   `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Pagination    *Pagination            `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTracerouteHopsRequest) Reset() {
	*x = ListTracerouteHopsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTracerouteHopsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTracerouteHopsRequest) ProtoMessage() {}

func (x *ListTracerouteHopsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTracerouteHopsRequest.ProtoReflect.Descriptor instead.
func (*ListTracerouteHopsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{66}
}

func (x *ListTracerouteHopsRequest) GetFilter() *TracerouteHopFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListTracerouteHopsRequest) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ListTracerouteHopsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hops          []*TracerouteHop       `protobuf:"bytes,1,rep,name=hops,proto3" json:"hops,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTracerouteHopsResponse) Reset() {
	*x = ListTracerouteHopsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTracerouteHopsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTracerouteHopsResponse) ProtoMessage() {}

func (x *ListTracerouteHopsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTracerouteHopsResponse.ProtoReflect.Descriptor instead.
func (*ListTracerouteHopsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{67}
}

func (x *ListTracerouteHopsResponse) GetHops() []*TracerouteHop {
	if x != nil {
		return x.Hops
	}
	return nil
}

func (x *ListTracerouteHopsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type TracerouteGraphRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracerouteGraphRequest) Reset() {
	*x = TracerouteGraphRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteGraphRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteGraphRequest) ProtoMessage() {}

func (x *TracerouteGraphRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteGraphRequest.ProtoReflect.Descriptor instead.
func (*TracerouteGraphRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{68}
}

func (x *TracerouteGraphRequest) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TracerouteGraphRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TracerouteGraphRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type TracerouteGraphNode struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	PacketCount   uint64                 `protobuf:"varint,2,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracerouteGraphNode) Reset() {
	*x = TracerouteGraphNode{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteGraphNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteGraphNode) ProtoMessage() {}

func (x *TracerouteGraphNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteGraphNode.ProtoReflect.Descriptor instead.
func (*TracerouteGraphNode) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{69}
}

func (x *TracerouteGraphNode) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *TracerouteGraphNode) GetPacketCount() uint64 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

type TracerouteGraphEdge struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromNodeId    uint32                 `protobuf:"varint,1,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId      uint32                 `protobuf:"varint,2,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	AvgSnr        float64                `protobuf:"fixed64,3,opt,name=avg_snr,json=avgSnr,proto3" json:"avg_snr,omitempty"`
	PacketCount   uint64                 `protobuf:"varint,4,opt,name=packet_count,json=packetCount,proto3" json:"packet_count,omitempty"`
	MaxHops       uint32                 `protobuf:"varint,5,opt,name=max_hops,json=maxHops,proto3" json:"max_hops,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracerouteGraphEdge) Reset() {
	*x = TracerouteGraphEdge{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteGraphEdge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteGraphEdge) ProtoMessage() {}

func (x *TracerouteGraphEdge) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteGraphEdge.ProtoReflect.Descriptor instead.
func (*TracerouteGraphEdge) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{70}
}

func (x *TracerouteGraphEdge) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *TracerouteGraphEdge) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *TracerouteGraphEdge) GetAvgSnr() float64 {
	if x != nil {
		return x.AvgSnr
	}
	return 0
}

func (x *TracerouteGraphEdge) GetPacketCount() uint64 {
	if x != nil {
		return x.PacketCount
	}
	return 0
}

func (x *TracerouteGraphEdge) GetMaxHops() uint32 {
	if x != nil {
		return x.MaxHops
	}
	return 0
}

type TracerouteGraphResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*TracerouteGraphNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Edges         []*TracerouteGraphEdge `protobuf:"bytes,2,rep,name=edges,proto3" json:"edges,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracerouteGraphResponse) Reset() {
	*x = TracerouteGraphResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteGraphResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteGraphResponse) ProtoMessage() {}

func (x *TracerouteGraphResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteGraphResponse.ProtoReflect.Descriptor instead.
func (*TracerouteGraphResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{71}
}

func (x *TracerouteGraphResponse) GetNodes() []*TracerouteGraphNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *TracerouteGraphResponse) GetEdges() []*TracerouteGraphEdge {
	if x != nil {
		return x.Edges
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{72}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{73}
}

func (x *HealthCheckResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{74}
}

type VersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GitSha        string                 `protobuf:"bytes,2,opt,name=git_sha,json=gitSha,proto3" json:"git_sha,omitempty"`
	BuildDate     string                 `protobuf:"bytes,3,opt,name=build_date,json=buildDate,proto3" json:"build_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionResponse) Reset() {
	*x = VersionResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionResponse) ProtoMessage() {}

func (x *VersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionResponse.ProtoReflect.Descriptor instead.
func (*VersionResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{75}
}

func (x *VersionResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VersionResponse) GetGitSha() string {
	if x != nil {
		return x.GitSha
	}
	return ""
}

func (x *VersionResponse) GetBuildDate() string {
	if x != nil {
		return x.BuildDate
	}
	return ""
}

type TracerouteGatewayObservation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GatewayId     string                 `protobuf:"bytes,1,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Rssi          int32                  `protobuf:"zigzag32,2,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Snr           float64                `protobuf:"fixed64,3,opt,name=snr,proto3" json:"snr,omitempty"`
	ReceivedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TracerouteGatewayObservation) Reset() {
	*x = TracerouteGatewayObservation{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TracerouteGatewayObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TracerouteGatewayObservation) ProtoMessage() {}

func (x *TracerouteGatewayObservation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TracerouteGatewayObservation.ProtoReflect.Descriptor instead.
func (*TracerouteGatewayObservation) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{76}
}

func (x *TracerouteGatewayObservation) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TracerouteGatewayObservation) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *TracerouteGatewayObservation) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *TracerouteGatewayObservation) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type TraceroutePacket struct {
	state                 protoimpl.MessageState          `protogen:"open.v1"`
	Id                    uint64                          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp             *timestamppb.Timestamp          `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	FromNodeId            uint32                          `protobuf:"varint,3,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId              uint32                          `protobuf:"varint,4,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	GatewayId             string                          `protobuf:"bytes,5,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	ChannelId             string                          `protobuf:"bytes,6,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	HopStart              int32                           `protobuf:"varint,7,opt,name=hop_start,json=hopStart,proto3" json:"hop_start,omitempty"`
	HopLimit              int32                           `protobuf:"varint,8,opt,name=hop_limit,json=hopLimit,proto3" json:"hop_limit,omitempty"`
	HopCount              int32                           `protobuf:"varint,9,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	Rssi                  int32                           `protobuf:"zigzag32,10,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Snr                   float64                         `protobuf:"fixed64,11,opt,name=snr,proto3" json:"snr,omitempty"`
	MeshPacketId          uint32                          `protobuf:"varint,12,opt,name=mesh_packet_id,json=meshPacketId,proto3" json:"mesh_packet_id,omitempty"`
	ProcessedSuccessfully bool                            `protobuf:"varint,13,opt,name=processed_successfully,json=processedSuccessfully,proto3" json:"processed_successfully,omitempty"`
	PayloadLength         uint32                          `protobuf:"varint,14,opt,name=payload_length,json=payloadLength,proto3" json:"payload_length,omitempty"`
	ReceptionCount        uint64                          `protobuf:"varint,15,opt,name=reception_count,json=receptionCount,proto3" json:"reception_count,omitempty"`
	GatewayCount          uint32                          `protobuf:"varint,16,opt,name=gateway_count,json=gatewayCount,proto3" json:"gateway_count,omitempty"`
	MinRssi               int32                           `protobuf:"zigzag32,17,opt,name=min_rssi,json=minRssi,proto3" json:"min_rssi,omitempty"`
	MaxRssi               int32                           `protobuf:"zigzag32,18,opt,name=max_rssi,json=maxRssi,proto3" json:"max_rssi,omitempty"`
	MinSnr                float64                         `protobuf:"fixed64,19,opt,name=min_snr,json=minSnr,proto3" json:"min_snr,omitempty"`
	MaxSnr                float64                         `protobuf:"fixed64,20,opt,name=max_snr,json=maxSnr,proto3" json:"max_snr,omitempty"`
	RouteNodes            []uint32                        `protobuf:"varint,21,rep,packed,name=route_nodes,json=routeNodes,proto3" json:"route_nodes,omitempty"`
	RouteSummary          string                          `protobuf:"bytes,22,opt,name=route_summary,json=routeSummary,proto3" json:"route_summary,omitempty"`
	IsGrouped             bool                            `protobuf:"varint,23,opt,name=is_grouped,json=isGrouped,proto3" json:"is_grouped,omitempty"`
	RawPayload            []byte                          `protobuf:"bytes,24,opt,name=raw_payload,json=rawPayload,proto3" json:"raw_payload,omitempty"`
	Gateways              []*TracerouteGatewayObservation `protobuf:"bytes,25,rep,name=gateways,proto3" json:"gateways,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TraceroutePacket) Reset() {
	*x = TraceroutePacket{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceroutePacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceroutePacket) ProtoMessage() {}

func (x *TraceroutePacket) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceroutePacket.ProtoReflect.Descriptor instead.
func (*TraceroutePacket) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{77}
}

func (x *TraceroutePacket) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TraceroutePacket) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TraceroutePacket) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *TraceroutePacket) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *TraceroutePacket) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TraceroutePacket) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *TraceroutePacket) GetHopStart() int32 {
	if x != nil {
		return x.HopStart
	}
	return 0
}

func (x *TraceroutePacket) GetHopLimit() int32 {
	if x != nil {
		return x.HopLimit
	}
	return 0
}

func (x *TraceroutePacket) GetHopCount() int32 {
	if x != nil {
		return x.HopCount
	}
	return 0
}

func (x *TraceroutePacket) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *TraceroutePacket) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *TraceroutePacket) GetMeshPacketId() uint32 {
	if x != nil {
		return x.MeshPacketId
	}
	return 0
}

func (x *TraceroutePacket) GetProcessedSuccessfully() bool {
	if x != nil {
		return x.ProcessedSuccessfully
	}
	return false
}

func (x *TraceroutePacket) GetPayloadLength() uint32 {
	if x != nil {
		return x.PayloadLength
	}
	return 0
}

func (x *TraceroutePacket) GetReceptionCount() uint64 {
	if x != nil {
		return x.ReceptionCount
	}
	return 0
}

func (x *TraceroutePacket) GetGatewayCount() uint32 {
	if x != nil {
		return x.GatewayCount
	}
	return 0
}

func (x *TraceroutePacket) GetMinRssi() int32 {
	if x != nil {
		return x.MinRssi
	}
	return 0
}

func (x *TraceroutePacket) GetMaxRssi() int32 {
	if x != nil {
		return x.MaxRssi
	}
	return 0
}

func (x *TraceroutePacket) GetMinSnr() float64 {
	if x != nil {
		return x.MinSnr
	}
	return 0
}

func (x *TraceroutePacket) GetMaxSnr() float64 {
	if x != nil {
		return x.MaxSnr
	}
	return 0
}

func (x *TraceroutePacket) GetRouteNodes() []uint32 {
	if x != nil {
		return x.RouteNodes
	}
	return nil
}

func (x *TraceroutePacket) GetRouteSummary() string {
	if x != nil {
		return x.RouteSummary
	}
	return ""
}

func (x *TraceroutePacket) GetIsGrouped() bool {
	if x != nil {
		return x.IsGrouped
	}
	return false
}

func (x *TraceroutePacket) GetRawPayload() []byte {
	if x != nil {
		return x.RawPayload
	}
	return nil
}

func (x *TraceroutePacket) GetGateways() []*TracerouteGatewayObservation {
	if x != nil {
		return x.Gateways
	}
	return nil
}

type TraceroutePacketFilter struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	StartTime                 *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime                   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	FromNodeId                uint32                 `protobuf:"varint,3,opt,name=from_node_id,json=fromNodeId,proto3" json:"from_node_id,omitempty"`
	ToNodeId                  uint32                 `protobuf:"varint,4,opt,name=to_node_id,json=toNodeId,proto3" json:"to_node_id,omitempty"`
	GatewayId                 string                 `protobuf:"bytes,5,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	PrimaryChannel            string                 `protobuf:"bytes,6,opt,name=primary_channel,json=primaryChannel,proto3" json:"primary_channel,omitempty"`
	HopCount                  int32                  `protobuf:"varint,7,opt,name=hop_count,json=hopCount,proto3" json:"hop_count,omitempty"`
	RouteNodeId               uint32                 `protobuf:"varint,8,opt,name=route_node_id,json=routeNodeId,proto3" json:"route_node_id,omitempty"`
	ProcessedSuccessfullyOnly bool                   `protobuf:"varint,9,opt,name=processed_successfully_only,json=processedSuccessfullyOnly,proto3" json:"processed_successfully_only,omitempty"`
	MinSnr                    float64                `protobuf:"fixed64,10,opt,name=min_snr,json=minSnr,proto3" json:"min_snr,omitempty"`
	MaxSnr                    float64                `protobuf:"fixed64,11,opt,name=max_snr,json=maxSnr,proto3" json:"max_snr,omitempty"`
	Search                    string                 `protobuf:"bytes,12,opt,name=search,proto3" json:"search,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *TraceroutePacketFilter) Reset() {
	*x = TraceroutePacketFilter{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TraceroutePacketFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TraceroutePacketFilter) ProtoMessage() {}

func (x *TraceroutePacketFilter) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TraceroutePacketFilter.ProtoReflect.Descriptor instead.
func (*TraceroutePacketFilter) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{78}
}

func (x *TraceroutePacketFilter) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TraceroutePacketFilter) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TraceroutePacketFilter) GetFromNodeId() uint32 {
	if x != nil {
		return x.FromNodeId
	}
	return 0
}

func (x *TraceroutePacketFilter) GetToNodeId() uint32 {
	if x != nil {
		return x.ToNodeId
	}
	return 0
}

func (x *TraceroutePacketFilter) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *TraceroutePacketFilter) GetPrimaryChannel() string {
	if x != nil {
		return x.PrimaryChannel
	}
	return ""
}

func (x *TraceroutePacketFilter) GetHopCount() int32 {
	if x != nil {
		return x.HopCount
	}
	return 0
}

func (x *TraceroutePacketFilter) GetRouteNodeId() uint32 {
	if x != nil {
		return x.RouteNodeId
	}
	return 0
}

func (x *TraceroutePacketFilter) GetProcessedSuccessfullyOnly() bool {
	if x != nil {
		return x.ProcessedSuccessfullyOnly
	}
	return false
}

func (x *TraceroutePacketFilter) GetMinSnr() float64 {
	if x != nil {
		return x.MinSnr
	}
	return 0
}

func (x *TraceroutePacketFilter) GetMaxSnr() float64 {
	if x != nil {
		return x.MaxSnr
	}
	return 0
}

func (x *TraceroutePacketFilter) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type ListTraceroutePacketsRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Filter        *TraceroutePacketFilter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit         uint32                  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        uint32                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	OrderBy       string                  `protobuf:"bytes,4,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	OrderDir      string                  `protobuf:"bytes,5,opt,name=order_dir,json=orderDir,proto3" json:"order_dir,omitempty"`
	GroupPackets  bool                    `protobuf:"varint,6,opt,name=group_packets,json=groupPackets,proto3" json:"group_packets,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTraceroutePacketsRequest) Reset() {
	*x = ListTraceroutePacketsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTraceroutePacketsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTraceroutePacketsRequest) ProtoMessage() {}

func (x *ListTraceroutePacketsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTraceroutePacketsRequest.ProtoReflect.Descriptor instead.
func (*ListTraceroutePacketsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{79}
}

func (x *ListTraceroutePacketsRequest) GetFilter() *TraceroutePacketFilter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *ListTraceroutePacketsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTraceroutePacketsRequest) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTraceroutePacketsRequest) GetOrderBy() string {
	if x != nil {
		return x.OrderBy
	}
	return ""
}

func (x *ListTraceroutePacketsRequest) GetOrderDir() string {
	if x != nil {
		return x.OrderDir
	}
	return ""
}

func (x *ListTraceroutePacketsRequest) GetGroupPackets() bool {
	if x != nil {
		return x.GroupPackets
	}
	return false
}

type ListTraceroutePacketsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Packets       []*TraceroutePacket    `protobuf:"bytes,1,rep,name=packets,proto3" json:"packets,omitempty"`
	TotalCount    uint64                 `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset        uint32                 `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	IsGrouped     bool                   `protobuf:"varint,5,opt,name=is_grouped,json=isGrouped,proto3" json:"is_grouped,omitempty"`
	HasMore       bool                   `protobuf:"varint,6,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTraceroutePacketsResponse) Reset() {
	*x = ListTraceroutePacketsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTraceroutePacketsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTraceroutePacketsResponse) ProtoMessage() {}

func (x *ListTraceroutePacketsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTraceroutePacketsResponse.ProtoReflect.Descriptor instead.
func (*ListTraceroutePacketsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{80}
}

func (x *ListTraceroutePacketsResponse) GetPackets() []*TraceroutePacket {
	if x != nil {
		return x.Packets
	}
	return nil
}

func (x *ListTraceroutePacketsResponse) GetTotalCount() uint64 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListTraceroutePacketsResponse) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTraceroutePacketsResponse) GetOffset() uint32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ListTraceroutePacketsResponse) GetIsGrouped() bool {
	if x != nil {
		return x.IsGrouped
	}
	return false
}

func (x *ListTraceroutePacketsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

type GetTracerouteDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PacketId      uint64                 `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTracerouteDetailsRequest) Reset() {
	*x = GetTracerouteDetailsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTracerouteDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTracerouteDetailsRequest) ProtoMessage() {}

func (x *GetTracerouteDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTracerouteDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetTracerouteDetailsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{81}
}

func (x *GetTracerouteDetailsRequest) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

type GetTracerouteDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Packet        *TraceroutePacket      `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	Hops          []*TracerouteHop       `protobuf:"bytes,2,rep,name=hops,proto3" json:"hops,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTracerouteDetailsResponse) Reset() {
	*x = GetTracerouteDetailsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTracerouteDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTracerouteDetailsResponse) ProtoMessage() {}

func (x *GetTracerouteDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTracerouteDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetTracerouteDetailsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{82}
}

func (x *GetTracerouteDetailsResponse) GetPacket() *TraceroutePacket {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *GetTracerouteDetailsResponse) GetHops() []*TracerouteHop {
	if x != nil {
		return x.Hops
	}
	return nil
}

type NodeDirectReception struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	PacketId          uint64                 `protobuf:"varint,1,opt,name=packet_id,json=packetId,proto3" json:"packet_id,omitempty"`
	OriginNodeId      uint32                 `protobuf:"varint,2,opt,name=origin_node_id,json=originNodeId,proto3" json:"origin_node_id,omitempty"`
	DestinationNodeId uint32                 `protobuf:"varint,3,opt,name=destination_node_id,json=destinationNodeId,proto3" json:"destination_node_id,omitempty"`
	GatewayId         string                 `protobuf:"bytes,4,opt,name=gateway_id,json=gatewayId,proto3" json:"gateway_id,omitempty"`
	Snr               float64                `protobuf:"fixed64,5,opt,name=snr,proto3" json:"snr,omitempty"`
	Rssi              int32                  `protobuf:"zigzag32,6,opt,name=rssi,proto3" json:"rssi,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeDirectReception) Reset() {
	*x = NodeDirectReception{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeDirectReception) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeDirectReception) ProtoMessage() {}

func (x *NodeDirectReception) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeDirectReception.ProtoReflect.Descriptor instead.
func (*NodeDirectReception) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{83}
}

func (x *NodeDirectReception) GetPacketId() uint64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *NodeDirectReception) GetOriginNodeId() uint32 {
	if x != nil {
		return x.OriginNodeId
	}
	return 0
}

func (x *NodeDirectReception) GetDestinationNodeId() uint32 {
	if x != nil {
		return x.DestinationNodeId
	}
	return 0
}

func (x *NodeDirectReception) GetGatewayId() string {
	if x != nil {
		return x.GatewayId
	}
	return ""
}

func (x *NodeDirectReception) GetSnr() float64 {
	if x != nil {
		return x.Snr
	}
	return 0
}

func (x *NodeDirectReception) GetRssi() int32 {
	if x != nil {
		return x.Rssi
	}
	return 0
}

func (x *NodeDirectReception) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ListNodeDirectReceptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Direction     string                 `protobuf:"bytes,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Limit         uint32                 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeDirectReceptionsRequest) Reset() {
	*x = ListNodeDirectReceptionsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeDirectReceptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeDirectReceptionsRequest) ProtoMessage() {}

func (x *ListNodeDirectReceptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeDirectReceptionsRequest.ProtoReflect.Descriptor instead.
func (*ListNodeDirectReceptionsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{84}
}

func (x *ListNodeDirectReceptionsRequest) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *ListNodeDirectReceptionsRequest) GetDirection() string {
	if x != nil {
		return x.Direction
	}
	return ""
}

func (x *ListNodeDirectReceptionsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListNodeDirectReceptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Receptions    []*NodeDirectReception `protobuf:"bytes,1,rep,name=receptions,proto3" json:"receptions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeDirectReceptionsResponse) Reset() {
	*x = ListNodeDirectReceptionsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeDirectReceptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeDirectReceptionsResponse) ProtoMessage() {}

func (x *ListNodeDirectReceptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeDirectReceptionsResponse.ProtoReflect.Descriptor instead.
func (*ListNodeDirectReceptionsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{85}
}

func (x *ListNodeDirectReceptionsResponse) GetReceptions() []*NodeDirectReception {
	if x != nil {
		return x.Receptions
	}
	return nil
}

type ListNodeNamesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeIds       []uint32               `protobuf:"varint,1,rep,packed,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeNamesRequest) Reset() {
	*x = ListNodeNamesRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeNamesRequest) ProtoMessage() {}

func (x *ListNodeNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeNamesRequest.ProtoReflect.Descriptor instead.
func (*ListNodeNamesRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{86}
}

func (x *ListNodeNamesRequest) GetNodeIds() []uint32 {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

type NodeNameEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        uint32                 `protobuf:"varint,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	ShortName     string                 `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeNameEntry) Reset() {
	*x = NodeNameEntry{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeNameEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeNameEntry) ProtoMessage() {}

func (x *NodeNameEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeNameEntry.ProtoReflect.Descriptor instead.
func (*NodeNameEntry) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{87}
}

func (x *NodeNameEntry) GetNodeId() uint32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *NodeNameEntry) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *NodeNameEntry) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

type ListNodeNamesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*NodeNameEntry       `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeNamesResponse) Reset() {
	*x = ListNodeNamesResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeNamesResponse) ProtoMessage() {}

func (x *ListNodeNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeNamesResponse.ProtoReflect.Descriptor instead.
func (*ListNodeNamesResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{88}
}

func (x *ListNodeNamesResponse) GetEntries() []*NodeNameEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ListPrimaryChannelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrimaryChannelsRequest) Reset() {
	*x = ListPrimaryChannelsRequest{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[89]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrimaryChannelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrimaryChannelsRequest) ProtoMessage() {}

func (x *ListPrimaryChannelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[89]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrimaryChannelsRequest.ProtoReflect.Descriptor instead.
func (*ListPrimaryChannelsRequest) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{89}
}

type ListPrimaryChannelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Channels      []string               `protobuf:"bytes,1,rep,name=channels,proto3" json:"channels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrimaryChannelsResponse) Reset() {
	*x = ListPrimaryChannelsResponse{}
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[90]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrimaryChannelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrimaryChannelsResponse) ProtoMessage() {}

func (x *ListPrimaryChannelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_meshpipe_v1_data_proto_msgTypes[90]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrimaryChannelsResponse.ProtoReflect.Descriptor instead.
func (*ListPrimaryChannelsResponse) Descriptor() ([]byte, []int) {
	return file_proto_meshpipe_v1_data_proto_rawDescGZIP(), []int{90}
}

func (x *ListPrimaryChannelsResponse) GetChannels() []string {
	if x != nil {
		return x.Channels
	}
	return nil
}

var File_proto_meshpipe_v1_data_proto protoreflect.FileDescriptor

const file_proto_meshpipe_v1_data_proto_rawDesc = "" +
	"\n" +
	"\x1cproto/meshpipe/v1/data.proto\x12\vmeshpipe.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"1\n" +
	"\x10DashboardRequest\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\"J\n" +
	"\x0fPacketTypeCount\x12!\n" +
	"\fportnum_name\x18\x01 \x01(\tR\vportnumName\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x04R\x05count\"\xc2\x02\n" +
	"\x11DashboardResponse\x12\x1f\n" +
	"\vtotal_nodes\x18\x01 \x01(\x04R\n" +
	"totalNodes\x12#\n" +
	"\rtotal_packets\x18\x02 \x01(\x04R\ftotalPackets\x12(\n" +
	"\x10active_nodes_24h\x18\x03 \x01(\x04R\x0eactiveNodes24h\x12%\n" +
	"\x0erecent_packets\x18\x04 \x01(\x04R\rrecentPackets\x12\x19\n" +
	"\bavg_rssi\x18\x05 \x01(\x01R\aavgRssi\x12\x17\n" +
	"\aavg_snr\x18\x06 \x01(\x01R\x06avgSnr\x12!\n" +
	"\fsuccess_rate\x18\a \x01(\x01R\vsuccessRate\x12?\n" +
	"\fpacket_types\x18\b \x03(\v2\x1c.meshpipe.v1.PacketTypeCountR\vpacketTypes\"A\n" +
	"\n" +
	"Pagination\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\rR\bpageSize\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\"\xd8\x02\n" +
	"\fPacketFilter\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x03 \x01(\tR\tgatewayId\x12 \n" +
	"\ffrom_node_id\x18\x04 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x05 \x01(\rR\btoNodeId\x12#\n" +
	"\rportnum_names\x18\x06 \x03(\tR\fportnumNames\x12\x1d\n" +
	"\n" +
	"channel_id\x18\a \x01(\tR\tchannelId\x12\x1b\n" +
	"\thop_count\x18\b \x01(\x05R\bhopCount\x12\x16\n" +
	"\x06search\x18\t \x01(\tR\x06search\"\x95\x04\n" +
	"\x06Packet\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12 \n" +
	"\ffrom_node_id\x18\x03 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x04 \x01(\rR\btoNodeId\x12!\n" +
	"\fportnum_name\x18\x05 \x01(\tR\vportnumName\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x06 \x01(\tR\tgatewayId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\a \x01(\tR\tchannelId\x12\x1b\n" +
	"\thop_start\x18\b \x01(\x05R\bhopStart\x12\x1b\n" +
	"\thop_limit\x18\t \x01(\x05R\bhopLimit\x12\x1b\n" +
	"\thop_count\x18\n" +
	" \x01(\x05R\bhopCount\x12\x12\n" +
	"\x04rssi\x18\v \x01(\x11R\x04rssi\x12\x10\n" +
	"\x03snr\x18\f \x01(\x01R\x03snr\x12$\n" +
	"\x0emesh_packet_id\x18\r \x01(\rR\fmeshPacketId\x125\n" +
	"\x16processed_successfully\x18\x0e \x01(\bR\x15processedSuccessfully\x12%\n" +
	"\x0epayload_length\x18\x0f \x01(\rR\rpayloadLength\x12\x1f\n" +
	"\vraw_payload\x18\x10 \x01(\fR\n" +
	"rawPayload\"8\n" +
	"\x1cMeshPacketAggregationOptions\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"\xc7\x03\n" +
	"\x13MeshPacketAggregate\x12$\n" +
	"\x0emesh_packet_id\x18\x01 \x01(\rR\fmeshPacketId\x12'\n" +
	"\x0freception_count\x18\x02 \x01(\x04R\x0ereceptionCount\x12#\n" +
	"\rgateway_count\x18\x03 \x01(\rR\fgatewayCount\x12\x19\n" +
	"\bmin_rssi\x18\x04 \x01(\x11R\aminRssi\x12\x19\n" +
	"\bmax_rssi\x18\x05 \x01(\x11R\amaxRssi\x12\x17\n" +
	"\amin_snr\x18\x06 \x01(\x01R\x06minSnr\x12\x17\n" +
	"\amax_snr\x18\a \x01(\x01R\x06maxSnr\x12\"\n" +
	"\rmin_hop_count\x18\b \x01(\x05R\vminHopCount\x12\"\n" +
	"\rmax_hop_count\x18\t \x01(\x05R\vmaxHopCount\x12F\n" +
	"\x11first_received_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\x0ffirstReceivedAt\x12D\n" +
	"\x10last_received_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\x0elastReceivedAt\"\xf6\x01\n" +
	"\x12ListPacketsRequest\x121\n" +
	"\x06filter\x18\x01 \x01(\v2\x19.meshpipe.v1.PacketFilterR\x06filter\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\x12'\n" +
	"\x0finclude_payload\x18\x03 \x01(\bR\x0eincludePayload\x12K\n" +
	"\vaggregation\x18\x04 \x01(\v2).meshpipe.v1.MeshPacketAggregationOptionsR\vaggregation\"\xbd\x01\n" +
	"\x13ListPacketsResponse\x12-\n" +
	"\apackets\x18\x01 \x03(\v2\x13.meshpipe.v1.PacketR\apackets\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12V\n" +
	"\x16mesh_packet_aggregates\x18\x03 \x03(\v2 .meshpipe.v1.MeshPacketAggregateR\x14meshPacketAggregates\"\xa7\x01\n" +
	"\n" +
	"NodeFilter\x12\x16\n" +
	"\x06search\x18\x01 \x01(\tR\x06search\x12\x12\n" +
	"\x04role\x18\x02 \x01(\tR\x04role\x12%\n" +
	"\x0ehardware_model\x18\x03 \x01(\tR\rhardwareModel\x12'\n" +
	"\x0fprimary_channel\x18\x04 \x01(\tR\x0eprimaryChannel\x12\x1d\n" +
	"\n" +
	"named_only\x18\x05 \x01(\bR\tnamedOnly\"\x87\a\n" +
	"\x04Node\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\x12\x15\n" +
	"\x06hex_id\x18\x02 \x01(\tR\x05hexId\x12!\n" +
	"\fdisplay_name\x18\x03 \x01(\tR\vdisplayName\x12\x1b\n" +
	"\tlong_name\x18\x04 \x01(\tR\blongName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x05 \x01(\tR\tshortName\x12%\n" +
	"\x0ehardware_model\x18\x06 \x01(\tR\rhardwareModel\x12.\n" +
	"\x13hardware_model_name\x18\a \x01(\tR\x11hardwareModelName\x12\x12\n" +
	"\x04role\x18\b \x01(\tR\x04role\x12\x1b\n" +
	"\trole_name\x18\t \x01(\tR\broleName\x12\x16\n" +
	"\x06region\x18\n" +
	" \x01(\tR\x06region\x12\x1f\n" +
	"\vregion_name\x18\v \x01(\tR\n" +
	"regionName\x12!\n" +
	"\fmodem_preset\x18\f \x01(\tR\vmodemPreset\x12*\n" +
	"\x11modem_preset_name\x18\r \x01(\tR\x0fmodemPresetName\x129\n" +
	"\n" +
	"first_seen\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tfirstSeen\x127\n" +
	"\tlast_seen\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12\x19\n" +
	"\bavg_rssi\x18\x10 \x01(\x01R\aavgRssi\x12\x17\n" +
	"\aavg_snr\x18\x11 \x01(\x01R\x06avgSnr\x12\x19\n" +
	"\bavg_hops\x18\x12 \x01(\x01R\aavgHops\x12#\n" +
	"\rtotal_packets\x18\x13 \x01(\x04R\ftotalPackets\x12'\n" +
	"\x0funique_gateways\x18\x14 \x01(\rR\x0euniqueGateways\x12/\n" +
	"\x13unique_destinations\x18\x15 \x01(\rR\x12uniqueDestinations\x12\x1f\n" +
	"\vpackets_24h\x18\x16 \x01(\x04R\n" +
	"packets24h\x12D\n" +
	"\x10last_packet_time\x18\x17 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastPacketTime\x127\n" +
	"\x18gateway_packet_count_24h\x18\x18 \x01(\x04R\x15gatewayPacketCount24h\"\xb9\x01\n" +
	"\x11NodeGatewayMetric\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x18\n" +
	"\apackets\x18\x02 \x01(\x04R\apackets\x12\x19\n" +
	"\bavg_rssi\x18\x03 \x01(\x01R\aavgRssi\x12\x17\n" +
	"\aavg_snr\x18\x04 \x01(\x01R\x06avgSnr\x127\n" +
	"\tlast_seen\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\"\xae\x01\n" +
	"\fNodeNeighbor\x12(\n" +
	"\x10neighbor_node_id\x18\x01 \x01(\rR\x0eneighborNodeId\x12\x17\n" +
	"\aavg_snr\x18\x02 \x01(\x01R\x06avgSnr\x12\"\n" +
	"\fobservations\x18\x03 \x01(\x04R\fobservations\x127\n" +
	"\tlast_seen\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\"D\n" +
	"\x0fNodeRoleSummary\x12\x1b\n" +
	"\trole_name\x18\x01 \x01(\tR\broleName\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x04R\x05count\"|\n" +
	"\x10ListNodesRequest\x12/\n" +
	"\x06filter\x18\x01 \x01(\v2\x17.meshpipe.v1.NodeFilterR\x06filter\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"s\n" +
	"\x11ListNodesResponse\x12'\n" +
	"\x05nodes\x18\x01 \x03(\v2\x11.meshpipe.v1.NodeR\x05nodes\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x14\n" +
	"\x05total\x18\x03 \x01(\x04R\x05total\")\n" +
	"\x0eGetNodeRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\"8\n" +
	"\x0fGetNodeResponse\x12%\n" +
	"\x04node\x18\x01 \x01(\v2\x11.meshpipe.v1.NodeR\x04node\".\n" +
	"\rGatewayFilter\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\"\xa0\x02\n" +
	"\vGatewayStat\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12#\n" +
	"\rpackets_total\x18\x02 \x01(\x04R\fpacketsTotal\x12%\n" +
	"\x0edistinct_nodes\x18\x03 \x01(\rR\rdistinctNodes\x129\n" +
	"\n" +
	"first_seen\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tfirstSeen\x127\n" +
	"\tlast_seen\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12\x19\n" +
	"\bavg_rssi\x18\x06 \x01(\x01R\aavgRssi\x12\x17\n" +
	"\aavg_snr\x18\a \x01(\x01R\x06avgSnr\"F\n" +
	"\x14GatewayStatsResponse\x12.\n" +
	"\x05stats\x18\x01 \x03(\v2\x18.meshpipe.v1.GatewayStatR\x05stats\"\x8a\x01\n" +
	"\n" +
	"LinkFilter\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12 \n" +
	"\ffrom_node_id\x18\x03 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x04 \x01(\rR\btoNodeId\"\xa2\x03\n" +
	"\rLinkAggregate\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x02 \x01(\tR\tchannelId\x12 \n" +
	"\ffrom_node_id\x18\x03 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x04 \x01(\rR\btoNodeId\x12#\n" +
	"\rpackets_total\x18\x05 \x01(\x04R\fpacketsTotal\x129\n" +
	"\n" +
	"first_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tfirstSeen\x127\n" +
	"\tlast_seen\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12\x19\n" +
	"\bavg_rssi\x18\b \x01(\x01R\aavgRssi\x12\x17\n" +
	"\aavg_snr\x18\t \x01(\x01R\x06avgSnr\x12\"\n" +
	"\rmax_hop_index\x18\n" +
	" \x01(\rR\vmaxHopIndex\x12\"\n" +
	"\rmax_hop_limit\x18\v \x01(\rR\vmaxHopLimit\"|\n" +
	"\x10ListLinksRequest\x12/\n" +
	"\x06filter\x18\x01 \x01(\v2\x17.meshpipe.v1.LinkFilterR\x06filter\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"f\n" +
	"\x11ListLinksResponse\x120\n" +
	"\x05links\x18\x01 \x03(\v2\x1a.meshpipe.v1.LinkAggregateR\x05links\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\x87\x01\n" +
	"\x10TracerouteFilter\x12$\n" +
	"\x0eorigin_node_id\x18\x01 \x01(\rR\foriginNodeId\x12.\n" +
	"\x13destination_node_id\x18\x02 \x01(\rR\x11destinationNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x03 \x01(\tR\tgatewayId\"\xb8\x02\n" +
	"\x0eTraceroutePath\x12$\n" +
	"\x0eorigin_node_id\x18\x01 \x01(\rR\foriginNodeId\x12.\n" +
	"\x13destination_node_id\x18\x02 \x01(\rR\x11destinationNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x03 \x01(\tR\tgatewayId\x12\x19\n" +
	"\bmax_hops\x18\x04 \x01(\rR\amaxHops\x12\"\n" +
	"\fobservations\x18\x05 \x01(\x04R\fobservations\x129\n" +
	"\n" +
	"first_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tfirstSeen\x127\n" +
	"\tlast_seen\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\"\x88\x01\n" +
	"\x16ListTraceroutesRequest\x125\n" +
	"\x06filter\x18\x01 \x01(\v2\x1d.meshpipe.v1.TracerouteFilterR\x06filter\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"m\n" +
	"\x17ListTraceroutesResponse\x121\n" +
	"\x05paths\x18\x01 \x03(\v2\x1b.meshpipe.v1.TraceroutePathR\x05paths\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"p\n" +
	"\x0fRangeTestFilter\x12 \n" +
	"\ffrom_node_id\x18\x01 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x02 \x01(\rR\btoNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x03 \x01(\tR\tgatewayId\"\xc4\x02\n" +
	"\x0fRangeTestResult\x12\x1b\n" +
	"\tpacket_id\x18\x01 \x01(\x04R\bpacketId\x12 \n" +
	"\ffrom_node_id\x18\x02 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x03 \x01(\rR\btoNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x04 \x01(\tR\tgatewayId\x12;\n" +
	"\vreceived_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\x12\x12\n" +
	"\x04rssi\x18\x06 \x01(\x11R\x04rssi\x12\x10\n" +
	"\x03snr\x18\a \x01(\x01R\x03snr\x12\x1b\n" +
	"\thop_limit\x18\b \x01(\rR\bhopLimit\x12\x1b\n" +
	"\thop_start\x18\t \x01(\rR\bhopStart\x12\x18\n" +
	"\apayload\x18\n" +
	" \x01(\fR\apayload\"\x86\x01\n" +
	"\x15ListRangeTestsRequest\x124\n" +
	"\x06filter\x18\x01 \x01(\v2\x1c.meshpipe.v1.RangeTestFilterR\x06filter\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"q\n" +
	"\x16ListRangeTestsResponse\x126\n" +
	"\aresults\x18\x01 \x03(\v2\x1c.meshpipe.v1.RangeTestResultR\aresults\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\xc0\x01\n" +
	"\x11StoreForwardEvent\x12\x1b\n" +
	"\tpacket_id\x18\x01 \x01(\x04R\bpacketId\x12;\n" +
	"\vreceived_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x03 \x01(\tR\tgatewayId\x12\x18\n" +
	"\avariant\x18\x04 \x01(\tR\avariant\x12\x18\n" +
	"\apayload\x18\x05 \x01(\fR\apayload\"q\n" +
	"\x17ListStoreForwardRequest\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"s\n" +
	"\x18ListStoreForwardResponse\x126\n" +
	"\x06events\x18\x01 \x03(\v2\x1e.meshpipe.v1.StoreForwardEventR\x06events\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\xd8\x01\n" +
	"\x10PaxcounterSample\x12\x1b\n" +
	"\tpacket_id\x18\x01 \x01(\x04R\bpacketId\x12;\n" +
	"\vreceived_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x03 \x01(\tR\tgatewayId\x12\x12\n" +
	"\x04wifi\x18\x04 \x01(\rR\x04wifi\x12\x10\n" +
	"\x03ble\x18\x05 \x01(\rR\x03ble\x12%\n" +
	"\x0euptime_seconds\x18\x06 \x01(\rR\ruptimeSeconds\"o\n" +
	"\x15ListPaxcounterRequest\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"r\n" +
	"\x16ListPaxcounterResponse\x127\n" +
	"\asamples\x18\x01 \x03(\v2\x1d.meshpipe.v1.PaxcounterSampleR\asamples\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\x89\x01\n" +
	"\x12NodeLocationFilter\x12\x19\n" +
	"\bnode_ids\x18\x01 \x03(\rR\anodeIds\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x03 \x01(\tR\tgatewayId\"\x8c\x03\n" +
	"\fNodeLocation\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\x12\x1a\n" +
	"\blatitude\x18\x02 \x01(\x01R\blatitude\x12\x1c\n" +
	"\tlongitude\x18\x03 \x01(\x01R\tlongitude\x12\x1a\n" +
	"\baltitude\x18\x04 \x01(\x05R\baltitude\x12\x1b\n" +
	"\tage_hours\x18\x05 \x01(\x01R\bageHours\x12!\n" +
	"\fdisplay_name\x18\x06 \x01(\tR\vdisplayName\x12'\n" +
	"\x0fprimary_channel\x18\a \x01(\tR\x0eprimaryChannel\x12 \n" +
	"\fsats_in_view\x18\b \x01(\rR\n" +
	"satsInView\x12)\n" +
	"\x10precision_meters\x18\t \x01(\x01R\x0fprecisionMeters\x128\n" +
	"\ttimestamp\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\v \x01(\tR\tgatewayId\"\x8c\x01\n" +
	"\x18ListNodeLocationsRequest\x127\n" +
	"\x06filter\x18\x01 \x01(\v2\x1f.meshpipe.v1.NodeLocationFilterR\x06filter\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"u\n" +
	"\x19ListNodeLocationsResponse\x127\n" +
	"\tlocations\x18\x01 \x03(\v2\x19.meshpipe.v1.NodeLocationR\tlocations\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\xa4\x01\n" +
	"\x10ChatWindowFilter\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x01 \x01(\tR\tchannelId\x12\x1a\n" +
	"\baudience\x18\x02 \x01(\tR\baudience\x12$\n" +
	"\x0esender_node_id\x18\x03 \x01(\rR\fsenderNodeId\x12\x16\n" +
	"\x06search\x18\x04 \x01(\tR\x06search\x12\x17\n" +
	"\anode_id\x18\x05 \x01(\rR\x06nodeId\"Y\n" +
	"\x12ChatMessageGateway\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x12\n" +
	"\x04rssi\x18\x02 \x01(\x11R\x04rssi\x12\x10\n" +
	"\x03snr\x18\x03 \x01(\x01R\x03snr\"\xe7\x02\n" +
	"\vChatMessage\x12\x1b\n" +
	"\tpacket_id\x18\x01 \x01(\x04R\bpacketId\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12 \n" +
	"\ffrom_node_id\x18\x03 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x04 \x01(\rR\btoNodeId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x05 \x01(\tR\tchannelId\x12\x1a\n" +
	"\baudience\x18\x06 \x01(\tR\baudience\x12\x12\n" +
	"\x04text\x18\a \x01(\tR\x04text\x12;\n" +
	"\bgateways\x18\b \x03(\v2\x1f.meshpipe.v1.ChatMessageGatewayR\bgateways\x125\n" +
	"\x16processed_successfully\x18\t \x01(\bR\x15processedSuccessfully\"y\n" +
	"\x12ChatWindowCounters\x12\x1f\n" +
	"\vmessages_1h\x18\x01 \x01(\x04R\n" +
	"messages1h\x12\x1f\n" +
	"\vmessages_6h\x18\x02 \x01(\x04R\n" +
	"messages6h\x12!\n" +
	"\fmessages_24h\x18\x03 \x01(\x04R\vmessages24h\"\x9c\x02\n" +
	"\x14GetChatWindowRequest\x125\n" +
	"\x06filter\x18\x01 \x01(\v2\x1d.meshpipe.v1.ChatWindowFilterR\x06filter\x12=\n" +
	"\fwindow_start\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\vwindowStart\x12!\n" +
	"\fwindow_hours\x18\x03 \x01(\rR\vwindowHours\x122\n" +
	"\x06before\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06before\x127\n" +
	"\n" +
	"pagination\x18\x05 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"\x8d\x02\n" +
	"\x15GetChatWindowResponse\x124\n" +
	"\bmessages\x18\x01 \x03(\v2\x18.meshpipe.v1.ChatMessageR\bmessages\x12;\n" +
	"\bcounters\x18\x02 \x01(\v2\x1f.meshpipe.v1.ChatWindowCountersR\bcounters\x12=\n" +
	"\fwindow_start\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vwindowStart\x12!\n" +
	"\fwindow_hours\x18\x04 \x01(\rR\vwindowHours\x12\x1f\n" +
	"\vnext_cursor\x18\x05 \x01(\tR\n" +
	"nextCursor\"\xbe\x02\n" +
	"\rNodeAnalytics\x12\x1f\n" +
	"\vpackets_24h\x18\x01 \x01(\x04R\n" +
	"packets24h\x12\x1d\n" +
	"\n" +
	"packets_7d\x18\x02 \x01(\x04R\tpackets7d\x12D\n" +
	"\x10last_packet_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x0elastPacketTime\x12:\n" +
	"\bgateways\x18\x04 \x03(\v2\x1e.meshpipe.v1.NodeGatewayMetricR\bgateways\x127\n" +
	"\tneighbors\x18\x05 \x03(\v2\x19.meshpipe.v1.NodeNeighborR\tneighbors\x122\n" +
	"\x05roles\x18\x06 \x03(\v2\x1c.meshpipe.v1.NodeRoleSummaryR\x05roles\"2\n" +
	"\x17GetNodeAnalyticsRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\"{\n" +
	"\x18GetNodeAnalyticsResponse\x12%\n" +
	"\x04node\x18\x01 \x01(\v2\x11.meshpipe.v1.NodeR\x04node\x128\n" +
	"\tanalytics\x18\x02 \x01(\v2\x1a.meshpipe.v1.NodeAnalyticsR\tanalytics\"P\n" +
	"\x19GetGatewayOverviewRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\rR\x05limit\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x02 \x01(\tR\tgatewayId\"\xd1\x02\n" +
	"\x0fGatewayOverview\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12!\n" +
	"\fpacket_count\x18\x02 \x01(\x04R\vpacketCount\x12%\n" +
	"\x0eunique_sources\x18\x03 \x01(\rR\runiqueSources\x12\x19\n" +
	"\bavg_rssi\x18\x04 \x01(\x01R\aavgRssi\x12\x17\n" +
	"\aavg_snr\x18\x05 \x01(\x01R\x06avgSnr\x127\n" +
	"\tlast_seen\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\blastSeen\x12'\n" +
	"\x0fdiversity_score\x18\a \x01(\x01R\x0ediversityScore\x12?\n" +
	"\x1cnodes_with_multiple_gateways\x18\b \x01(\rR\x19nodesWithMultipleGateways\"V\n" +
	"\x1aGetGatewayOverviewResponse\x128\n" +
	"\bgateways\x18\x01 \x03(\v2\x1c.meshpipe.v1.GatewayOverviewR\bgateways\"\x9c\x01\n" +
	"\x12PacketSuccessStats\x12#\n" +
	"\rtotal_packets\x18\x01 \x01(\x04R\ftotalPackets\x12-\n" +
	"\x12successful_packets\x18\x02 \x01(\x04R\x11successfulPackets\x122\n" +
	"\x15average_payload_bytes\x18\x03 \x01(\x01R\x13averagePayloadBytes\"I\n" +
	"\x12NodeActivityBucket\x12\x14\n" +
	"\x05label\x18\x01 \x01(\tR\x05label\x12\x1d\n" +
	"\n" +
	"node_count\x18\x02 \x01(\x04R\tnodeCount\"J\n" +
	"\x14SignalQualitySummary\x12\x19\n" +
	"\bavg_rssi\x18\x01 \x01(\x01R\aavgRssi\x12\x17\n" +
	"\aavg_snr\x18\x02 \x01(\x01R\x06avgSnr\"i\n" +
	"\x0eTemporalBucket\x12=\n" +
	"\fbucket_start\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\vbucketStart\x12\x18\n" +
	"\apackets\x18\x02 \x01(\x04R\apackets\"_\n" +
	"\aTopNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x18\n" +
	"\apackets\x18\x03 \x01(\x04R\apackets\";\n" +
	"\x11DistributionEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x04R\x05count\"z\n" +
	"\x1aGetAnalyticsSummaryRequest\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12 \n" +
	"\ffrom_node_id\x18\x02 \x01(\rR\n" +
	"fromNodeId\x12\x1b\n" +
	"\thop_count\x18\x03 \x01(\x05R\bhopCount\"\x99\x04\n" +
	"\x1bGetAnalyticsSummaryResponse\x12F\n" +
	"\x0epacket_success\x18\x01 \x01(\v2\x1f.meshpipe.v1.PacketSuccessStatsR\rpacketSuccess\x12D\n" +
	"\rnode_activity\x18\x02 \x03(\v2\x1f.meshpipe.v1.NodeActivityBucketR\fnodeActivity\x12H\n" +
	"\x0esignal_quality\x18\x03 \x01(\v2!.meshpipe.v1.SignalQualitySummaryR\rsignalQuality\x12B\n" +
	"\x0ehourly_packets\x18\x04 \x03(\v2\x1b.meshpipe.v1.TemporalBucketR\rhourlyPackets\x121\n" +
	"\ttop_nodes\x18\x05 \x03(\v2\x14.meshpipe.v1.TopNodeR\btopNodes\x12X\n" +
	"\x18packet_type_distribution\x18\x06 \x03(\v2\x1e.meshpipe.v1.DistributionEntryR\x16packetTypeDistribution\x12Q\n" +
	"\x14gateway_distribution\x18\a \x03(\v2\x1e.meshpipe.v1.DistributionEntryR\x13gatewayDistribution\"\xe4\x01\n" +
	"\x13TracerouteHopFilter\x12\x1b\n" +
	"\tpacket_id\x18\x01 \x01(\x04R\bpacketId\x12$\n" +
	"\x0eorigin_node_id\x18\x02 \x01(\rR\foriginNodeId\x12.\n" +
	"\x13destination_node_id\x18\x03 \x01(\rR\x11destinationNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x04 \x01(\tR\tgatewayId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x05 \x01(\rR\trequestId\x12\x1c\n" +
	"\tdirection\x18\x06 \x01(\tR\tdirection\"\xdb\x02\n" +
	"\rTracerouteHop\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1b\n" +
	"\tpacket_id\x18\x02 \x01(\x04R\bpacketId\x12$\n" +
	"\x0eorigin_node_id\x18\x03 \x01(\rR\foriginNodeId\x12.\n" +
	"\x13destination_node_id\x18\x04 \x01(\rR\x11destinationNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x05 \x01(\tR\tgatewayId\x12\x1c\n" +
	"\tdirection\x18\x06 \x01(\tR\tdirection\x12\x1b\n" +
	"\thop_index\x18\a \x01(\rR\bhopIndex\x12\x1e\n" +
	"\vhop_node_id\x18\b \x01(\rR\thopNodeId\x12\x10\n" +
	"\x03snr\x18\t \x01(\x01R\x03snr\x12;\n" +
	"\vreceived_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\"\x8e\x01\n" +
	"\x19ListTracerouteHopsRequest\x128\n" +
	"\x06filter\x18\x01 \x01(\v2 .meshpipe.v1.TracerouteHopFilterR\x06filter\x127\n" +
	"\n" +
	"pagination\x18\x02 \x01(\v2\x17.meshpipe.v1.PaginationR\n" +
	"pagination\"m\n" +
	"\x1aListTracerouteHopsResponse\x12.\n" +
	"\x04hops\x18\x01 \x03(\v2\x1a.meshpipe.v1.TracerouteHopR\x04hops\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\"\xa9\x01\n" +
	"\x16TracerouteGraphRequest\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x129\n" +
	"\n" +
	"start_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"Q\n" +
	"\x13TracerouteGraphNode\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\x12!\n" +
	"\fpacket_count\x18\x02 \x01(\x04R\vpacketCount\"\xac\x01\n" +
	"\x13TracerouteGraphEdge\x12 \n" +
	"\ffrom_node_id\x18\x01 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x02 \x01(\rR\btoNodeId\x12\x17\n" +
	"\aavg_snr\x18\x03 \x01(\x01R\x06avgSnr\x12!\n" +
	"\fpacket_count\x18\x04 \x01(\x04R\vpacketCount\x12\x19\n" +
	"\bmax_hops\x18\x05 \x01(\rR\amaxHops\"\x89\x01\n" +
	"\x17TracerouteGraphResponse\x126\n" +
	"\x05nodes\x18\x01 \x03(\v2 .meshpipe.v1.TracerouteGraphNodeR\x05nodes\x126\n" +
	"\x05edges\x18\x02 \x03(\v2 .meshpipe.v1.TracerouteGraphEdgeR\x05edges\"\x14\n" +
	"\x12HealthCheckRequest\"E\n" +
	"\x13HealthCheckResponse\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x13\n" +
	"\x11GetVersionRequest\"c\n" +
	"\x0fVersionResponse\x12\x18\n" +
	"\aversion\x18\x01 \x01(\tR\aversion\x12\x17\n" +
	"\agit_sha\x18\x02 \x01(\tR\x06gitSha\x12\x1d\n" +
	"\n" +
	"build_date\x18\x03 \x01(\tR\tbuildDate\"\xa0\x01\n" +
	"\x1cTracerouteGatewayObservation\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x01 \x01(\tR\tgatewayId\x12\x12\n" +
	"\x04rssi\x18\x02 \x01(\x11R\x04rssi\x12\x10\n" +
	"\x03snr\x18\x03 \x01(\x01R\x03snr\x12;\n" +
	"\vreceived_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"receivedAt\"\xde\x06\n" +
	"\x10TraceroutePacket\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12 \n" +
	"\ffrom_node_id\x18\x03 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x04 \x01(\rR\btoNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x05 \x01(\tR\tgatewayId\x12\x1d\n" +
	"\n" +
	"channel_id\x18\x06 \x01(\tR\tchannelId\x12\x1b\n" +
	"\thop_start\x18\a \x01(\x05R\bhopStart\x12\x1b\n" +
	"\thop_limit\x18\b \x01(\x05R\bhopLimit\x12\x1b\n" +
	"\thop_count\x18\t \x01(\x05R\bhopCount\x12\x12\n" +
	"\x04rssi\x18\n" +
	" \x01(\x11R\x04rssi\x12\x10\n" +
	"\x03snr\x18\v \x01(\x01R\x03snr\x12$\n" +
	"\x0emesh_packet_id\x18\f \x01(\rR\fmeshPacketId\x125\n" +
	"\x16processed_successfully\x18\r \x01(\bR\x15processedSuccessfully\x12%\n" +
	"\x0epayload_length\x18\x0e \x01(\rR\rpayloadLength\x12'\n" +
	"\x0freception_count\x18\x0f \x01(\x04R\x0ereceptionCount\x12#\n" +
	"\rgateway_count\x18\x10 \x01(\rR\fgatewayCount\x12\x19\n" +
	"\bmin_rssi\x18\x11 \x01(\x11R\aminRssi\x12\x19\n" +
	"\bmax_rssi\x18\x12 \x01(\x11R\amaxRssi\x12\x17\n" +
	"\amin_snr\x18\x13 \x01(\x01R\x06minSnr\x12\x17\n" +
	"\amax_snr\x18\x14 \x01(\x01R\x06maxSnr\x12\x1f\n" +
	"\vroute_nodes\x18\x15 \x03(\rR\n" +
	"routeNodes\x12#\n" +
	"\rroute_summary\x18\x16 \x01(\tR\frouteSummary\x12\x1d\n" +
	"\n" +
	"is_grouped\x18\x17 \x01(\bR\tisGrouped\x12\x1f\n" +
	"\vraw_payload\x18\x18 \x01(\fR\n" +
	"rawPayload\x12E\n" +
	"\bgateways\x18\x19 \x03(\v2).meshpipe.v1.TracerouteGatewayObservationR\bgateways\"\xdd\x03\n" +
	"\x16TraceroutePacketFilter\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12 \n" +
	"\ffrom_node_id\x18\x03 \x01(\rR\n" +
	"fromNodeId\x12\x1c\n" +
	"\n" +
	"to_node_id\x18\x04 \x01(\rR\btoNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x05 \x01(\tR\tgatewayId\x12'\n" +
	"\x0fprimary_channel\x18\x06 \x01(\tR\x0eprimaryChannel\x12\x1b\n" +
	"\thop_count\x18\a \x01(\x05R\bhopCount\x12\"\n" +
	"\rroute_node_id\x18\b \x01(\rR\vrouteNodeId\x12>\n" +
	"\x1bprocessed_successfully_only\x18\t \x01(\bR\x19processedSuccessfullyOnly\x12\x17\n" +
	"\amin_snr\x18\n" +
	" \x01(\x01R\x06minSnr\x12\x17\n" +
	"\amax_snr\x18\v \x01(\x01R\x06maxSnr\x12\x16\n" +
	"\x06search\x18\f \x01(\tR\x06search\"\xe6\x01\n" +
	"\x1cListTraceroutePacketsRequest\x12;\n" +
	"\x06filter\x18\x01 \x01(\v2#.meshpipe.v1.TraceroutePacketFilterR\x06filter\x12\x14\n" +
	"\x05limit\x18\x02 \x01(\rR\x05limit\x12\x16\n" +
	"\x06offset\x18\x03 \x01(\rR\x06offset\x12\x19\n" +
	"\border_by\x18\x04 \x01(\tR\aorderBy\x12\x1b\n" +
	"\torder_dir\x18\x05 \x01(\tR\borderDir\x12#\n" +
	"\rgroup_packets\x18\x06 \x01(\bR\fgroupPackets\"\xe1\x01\n" +
	"\x1dListTraceroutePacketsResponse\x127\n" +
	"\apackets\x18\x01 \x03(\v2\x1d.meshpipe.v1.TraceroutePacketR\apackets\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x04R\n" +
	"totalCount\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\rR\x06offset\x12\x1d\n" +
	"\n" +
	"is_grouped\x18\x05 \x01(\bR\tisGrouped\x12\x19\n" +
	"\bhas_more\x18\x06 \x01(\bR\ahasMore\":\n" +
	"\x1bGetTracerouteDetailsRequest\x12\x1b\n" +
	"\tpacket_id\x18\x01 \x01(\x04R\bpacketId\"\x85\x01\n" +
	"\x1cGetTracerouteDetailsResponse\x125\n" +
	"\x06packet\x18\x01 \x01(\v2\x1d.meshpipe.v1.TraceroutePacketR\x06packet\x12.\n" +
	"\x04hops\x18\x02 \x03(\v2\x1a.meshpipe.v1.TracerouteHopR\x04hops\"\x87\x02\n" +
	"\x13NodeDirectReception\x12\x1b\n" +
	"\tpacket_id\x18\x01 \x01(\x04R\bpacketId\x12$\n" +
	"\x0eorigin_node_id\x18\x02 \x01(\rR\foriginNodeId\x12.\n" +
	"\x13destination_node_id\x18\x03 \x01(\rR\x11destinationNodeId\x12\x1d\n" +
	"\n" +
	"gateway_id\x18\x04 \x01(\tR\tgatewayId\x12\x10\n" +
	"\x03snr\x18\x05 \x01(\x01R\x03snr\x12\x12\n" +
	"\x04rssi\x18\x06 \x01(\x11R\x04rssi\x128\n" +
	"\ttimestamp\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"n\n" +
	"\x1fListNodeDirectReceptionsRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\x12\x1c\n" +
	"\tdirection\x18\x02 \x01(\tR\tdirection\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\rR\x05limit\"d\n" +
	" ListNodeDirectReceptionsResponse\x12@\n" +
	"\n" +
	"receptions\x18\x01 \x03(\v2 .meshpipe.v1.NodeDirectReceptionR\n" +
	"receptions\"1\n" +
	"\x14ListNodeNamesRequest\x12\x19\n" +
	"\bnode_ids\x18\x01 \x03(\rR\anodeIds\"j\n" +
	"\rNodeNameEntry\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\rR\x06nodeId\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x1d\n" +
	"\n" +
	"short_name\x18\x03 \x01(\tR\tshortName\"M\n" +
	"\x15ListNodeNamesResponse\x124\n" +
	"\aentries\x18\x01 \x03(\v2\x1a.meshpipe.v1.NodeNameEntryR\aentries\"\x1c\n" +
	"\x1aListPrimaryChannelsRequest\"9\n" +
	"\x1bListPrimaryChannelsResponse\x12\x1a\n" +
	"\bchannels\x18\x01 \x03(\tR\bchannels2\x8a\x12\n" +
	"\fMeshpipeData\x12R\n" +
	"\x11GetDashboardStats\x12\x1d.meshpipe.v1.DashboardRequest\x1a\x1e.meshpipe.v1.DashboardResponse\x12P\n" +
	"\vListPackets\x12\x1f.meshpipe.v1.ListPacketsRequest\x1a .meshpipe.v1.ListPacketsResponse\x12G\n" +
	"\rStreamPackets\x12\x1f.meshpipe.v1.ListPacketsRequest\x1a\x13.meshpipe.v1.Packet0\x01\x12J\n" +
	"\tListNodes\x12\x1d.meshpipe.v1.ListNodesRequest\x1a\x1e.meshpipe.v1.ListNodesResponse\x12D\n" +
	"\aGetNode\x12\x1b.meshpipe.v1.GetNodeRequest\x1a\x1c.meshpipe.v1.GetNodeResponse\x12P\n" +
	"\x0fGetGatewayStats\x12\x1a.meshpipe.v1.GatewayFilter\x1a!.meshpipe.v1.GatewayStatsResponse\x12J\n" +
	"\tListLinks\x12\x1d.meshpipe.v1.ListLinksRequest\x1a\x1e.meshpipe.v1.ListLinksResponse\x12\\\n" +
	"\x0fListTraceroutes\x12#.meshpipe.v1.ListTraceroutesRequest\x1a$.meshpipe.v1.ListTraceroutesResponse\x12Y\n" +
	"\x0eListRangeTests\x12\".meshpipe.v1.ListRangeTestsRequest\x1a#.meshpipe.v1.ListRangeTestsResponse\x12_\n" +
	"\x10ListStoreForward\x12$.meshpipe.v1.ListStoreForwardRequest\x1a%.meshpipe.v1.ListStoreForwardResponse\x12Y\n" +
	"\x0eListPaxcounter\x12\".meshpipe.v1.ListPaxcounterRequest\x1a#.meshpipe.v1.ListPaxcounterResponse\x12b\n" +
	"\x11ListNodeLocations\x12%.meshpipe.v1.ListNodeLocationsRequest\x1a&.meshpipe.v1.ListNodeLocationsResponse\x12V\n" +
	"\rGetChatWindow\x12!.meshpipe.v1.GetChatWindowRequest\x1a\".meshpipe.v1.GetChatWindowResponse\x12_\n" +
	"\x10GetNodeAnalytics\x12$.meshpipe.v1.GetNodeAnalyticsRequest\x1a%.meshpipe.v1.GetNodeAnalyticsResponse\x12e\n" +
	"\x12GetGatewayOverview\x12&.meshpipe.v1.GetGatewayOverviewRequest\x1a'.meshpipe.v1.GetGatewayOverviewResponse\x12h\n" +
	"\x13GetAnalyticsSummary\x12'.meshpipe.v1.GetAnalyticsSummaryRequest\x1a(.meshpipe.v1.GetAnalyticsSummaryResponse\x12n\n" +
	"\x15ListTraceroutePackets\x12).meshpipe.v1.ListTraceroutePacketsRequest\x1a*.meshpipe.v1.ListTraceroutePacketsResponse\x12k\n" +
	"\x14GetTracerouteDetails\x12(.meshpipe.v1.GetTracerouteDetailsRequest\x1a).meshpipe.v1.GetTracerouteDetailsResponse\x12e\n" +
	"\x12ListTracerouteHops\x12&.meshpipe.v1.ListTracerouteHopsRequest\x1a'.meshpipe.v1.ListTracerouteHopsResponse\x12_\n" +
	"\x12GetTracerouteGraph\x12#.meshpipe.v1.TracerouteGraphRequest\x1a$.meshpipe.v1.TracerouteGraphResponse\x12w\n" +
	"\x18ListNodeDirectReceptions\x12,.meshpipe.v1.ListNodeDirectReceptionsRequest\x1a-.meshpipe.v1.ListNodeDirectReceptionsResponse\x12V\n" +
	"\rListNodeNames\x12!.meshpipe.v1.ListNodeNamesRequest\x1a\".meshpipe.v1.ListNodeNamesResponse\x12h\n" +
	"\x13ListPrimaryChannels\x12'.meshpipe.v1.ListPrimaryChannelsRequest\x1a(.meshpipe.v1.ListPrimaryChannelsResponse\x12L\n" +
	"\aHealthz\x12\x1f.meshpipe.v1.HealthCheckRequest\x1a .meshpipe.v1.HealthCheckResponse\x12J\n" +
	"\n" +
	"GetVersion\x12\x1e.meshpipe.v1.GetVersionRequest\x1a\x1c.meshpipe.v1.VersionResponseBDZBgithub.com/aminovpavel/meshpipe-go/internal/api/grpc/gen/v1;grpcv1b\x06proto3"

var (
	file_proto_meshpipe_v1_data_proto_rawDescOnce sync.Once
	file_proto_meshpipe_v1_data_proto_rawDescData []byte
)

func file_proto_meshpipe_v1_data_proto_rawDescGZIP() []byte {
	file_proto_meshpipe_v1_data_proto_rawDescOnce.Do(func() {
		file_proto_meshpipe_v1_data_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_meshpipe_v1_data_proto_rawDesc), len(file_proto_meshpipe_v1_data_proto_rawDesc)))
	})
	return file_proto_meshpipe_v1_data_proto_rawDescData
}

var file_proto_meshpipe_v1_data_proto_msgTypes = make([]protoimpl.MessageInfo, 91)
var file_proto_meshpipe_v1_data_proto_goTypes = []any{
	(*DashboardRequest)(nil),                 // 0: meshpipe.v1.DashboardRequest
	(*PacketTypeCount)(nil),                  // 1: meshpipe.v1.PacketTypeCount
	(*DashboardResponse)(nil),                // 2: meshpipe.v1.DashboardResponse
	(*Pagination)(nil),                       // 3: meshpipe.v1.Pagination
	(*PacketFilter)(nil),                     // 4: meshpipe.v1.PacketFilter
	(*Packet)(nil),                           // 5: meshpipe.v1.Packet
	(*MeshPacketAggregationOptions)(nil),     // 6: meshpipe.v1.MeshPacketAggregationOptions
	(*MeshPacketAggregate)(nil),              // 7: meshpipe.v1.MeshPacketAggregate
	(*ListPacketsRequest)(nil),               // 8: meshpipe.v1.ListPacketsRequest
	(*ListPacketsResponse)(nil),              // 9: meshpipe.v1.ListPacketsResponse
	(*NodeFilter)(nil),                       // 10: meshpipe.v1.NodeFilter
	(*Node)(nil),                             // 11: meshpipe.v1.Node
	(*NodeGatewayMetric)(nil),                // 12: meshpipe.v1.NodeGatewayMetric
	(*NodeNeighbor)(nil),                     // 13: meshpipe.v1.NodeNeighbor
	(*NodeRoleSummary)(nil),                  // 14: meshpipe.v1.NodeRoleSummary
	(*ListNodesRequest)(nil),                 // 15: meshpipe.v1.ListNodesRequest
	(*ListNodesResponse)(nil),                // 16: meshpipe.v1.ListNodesResponse
	(*GetNodeRequest)(nil),                   // 17: meshpipe.v1.GetNodeRequest
	(*GetNodeResponse)(nil),                  // 18: meshpipe.v1.GetNodeResponse
	(*GatewayFilter)(nil),                    // 19: meshpipe.v1.GatewayFilter
	(*GatewayStat)(nil),                      // 20: meshpipe.v1.GatewayStat
	(*GatewayStatsResponse)(nil),             // 21: meshpipe.v1.GatewayStatsResponse
	(*LinkFilter)(nil),                       // 22: meshpipe.v1.LinkFilter
	(*LinkAggregate)(nil),                    // 23: meshpipe.v1.LinkAggregate
	(*ListLinksRequest)(nil),                 // 24: meshpipe.v1.ListLinksRequest
	(*ListLinksResponse)(nil),                // 25: meshpipe.v1.ListLinksResponse
	(*TracerouteFilter)(nil),                 // 26: meshpipe.v1.TracerouteFilter
	(*TraceroutePath)(nil),                   // 27: meshpipe.v1.TraceroutePath
	(*ListTraceroutesRequest)(nil),           // 28: meshpipe.v1.ListTraceroutesRequest
	(*ListTraceroutesResponse)(nil),          // 29: meshpipe.v1.ListTraceroutesResponse
	(*RangeTestFilter)(nil),                  // 30: meshpipe.v1.RangeTestFilter
	(*RangeTestResult)(nil),                  // 31: meshpipe.v1.RangeTestResult
	(*ListRangeTestsRequest)(nil),            // 32: meshpipe.v1.ListRangeTestsRequest
	(*ListRangeTestsResponse)(nil),           // 33: meshpipe.v1.ListRangeTestsResponse
	(*StoreForwardEvent)(nil),                // 34: meshpipe.v1.StoreForwardEvent
	(*ListStoreForwardRequest)(nil),          // 35: meshpipe.v1.ListStoreForwardRequest
	(*ListStoreForwardResponse)(nil),         // 36: meshpipe.v1.ListStoreForwardResponse
	(*PaxcounterSample)(nil),                 // 37: meshpipe.v1.PaxcounterSample
	(*ListPaxcounterRequest)(nil),            // 38: meshpipe.v1.ListPaxcounterRequest
	(*ListPaxcounterResponse)(nil),           // 39: meshpipe.v1.ListPaxcounterResponse
	(*NodeLocationFilter)(nil),               // 40: meshpipe.v1.NodeLocationFilter
	(*NodeLocation)(nil),                     // 41: meshpipe.v1.NodeLocation
	(*ListNodeLocationsRequest)(nil),         // 42: meshpipe.v1.ListNodeLocationsRequest
	(*ListNodeLocationsResponse)(nil),        // 43: meshpipe.v1.ListNodeLocationsResponse
	(*ChatWindowFilter)(nil),                 // 44: meshpipe.v1.ChatWindowFilter
	(*ChatMessageGateway)(nil),               // 45: meshpipe.v1.ChatMessageGateway
	(*ChatMessage)(nil),                      // 46: meshpipe.v1.ChatMessage
	(*ChatWindowCounters)(nil),               // 47: meshpipe.v1.ChatWindowCounters
	(*GetChatWindowRequest)(nil),             // 48: meshpipe.v1.GetChatWindowRequest
	(*GetChatWindowResponse)(nil),            // 49: meshpipe.v1.GetChatWindowResponse
	(*NodeAnalytics)(nil),                    // 50: meshpipe.v1.NodeAnalytics
	(*GetNodeAnalyticsRequest)(nil),          // 51: meshpipe.v1.GetNodeAnalyticsRequest
	(*GetNodeAnalyticsResponse)(nil),         // 52: meshpipe.v1.GetNodeAnalyticsResponse
	(*GetGatewayOverviewRequest)(nil),        // 53: meshpipe.v1.GetGatewayOverviewRequest
	(*GatewayOverview)(nil),                  // 54: meshpipe.v1.GatewayOverview
	(*GetGatewayOverviewResponse)(nil),       // 55: meshpipe.v1.GetGatewayOverviewResponse
	(*PacketSuccessStats)(nil),               // 56: meshpipe.v1.PacketSuccessStats
	(*NodeActivityBucket)(nil),               // 57: meshpipe.v1.NodeActivityBucket
	(*SignalQualitySummary)(nil),             // 58: meshpipe.v1.SignalQualitySummary
	(*TemporalBucket)(nil),                   // 59: meshpipe.v1.TemporalBucket
	(*TopNode)(nil),                          // 60: meshpipe.v1.TopNode
	(*DistributionEntry)(nil),                // 61: meshpipe.v1.DistributionEntry
	(*GetAnalyticsSummaryRequest)(nil),       // 62: meshpipe.v1.GetAnalyticsSummaryRequest
	(*GetAnalyticsSummaryResponse)(nil),      // 63: meshpipe.v1.GetAnalyticsSummaryResponse
	(*TracerouteHopFilter)(nil),              // 64: meshpipe.v1.TracerouteHopFilter
	(*TracerouteHop)(nil),                    // 65: meshpipe.v1.TracerouteHop
	(*ListTracerouteHopsRequest)(nil),        // 66: meshpipe.v1.ListTracerouteHopsRequest
	(*ListTracerouteHopsResponse)(nil),       // 67: meshpipe.v1.ListTracerouteHopsResponse
	(*TracerouteGraphRequest)(nil),           // 68: meshpipe.v1.TracerouteGraphRequest
	(*TracerouteGraphNode)(nil),              // 69: meshpipe.v1.TracerouteGraphNode
	(*TracerouteGraphEdge)(nil),              // 70: meshpipe.v1.TracerouteGraphEdge
	(*TracerouteGraphResponse)(nil),          // 71: meshpipe.v1.TracerouteGraphResponse
	(*HealthCheckRequest)(nil),               // 72: meshpipe.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),              // 73: meshpipe.v1.HealthCheckResponse
	(*GetVersionRequest)(nil),                // 74: meshpipe.v1.GetVersionRequest
	(*VersionResponse)(nil),                  // 75: meshpipe.v1.VersionResponse
	(*TracerouteGatewayObservation)(nil),     // 76: meshpipe.v1.TracerouteGatewayObservation
	(*TraceroutePacket)(nil),                 // 77: meshpipe.v1.TraceroutePacket
	(*TraceroutePacketFilter)(nil),           // 78: meshpipe.v1.TraceroutePacketFilter
	(*ListTraceroutePacketsRequest)(nil),     // 79: meshpipe.v1.ListTraceroutePacketsRequest
	(*ListTraceroutePacketsResponse)(nil),    // 80: meshpipe.v1.ListTraceroutePacketsResponse
	(*GetTracerouteDetailsRequest)(nil),      // 81: meshpipe.v1.GetTracerouteDetailsRequest
	(*GetTracerouteDetailsResponse)(nil),     // 82: meshpipe.v1.GetTracerouteDetailsResponse
	(*NodeDirectReception)(nil),              // 83: meshpipe.v1.NodeDirectReception
	(*ListNodeDirectReceptionsRequest)(nil),  // 84: meshpipe.v1.ListNodeDirectReceptionsRequest
	(*ListNodeDirectReceptionsResponse)(nil), // 85: meshpipe.v1.ListNodeDirectReceptionsResponse
	(*ListNodeNamesRequest)(nil),             // 86: meshpipe.v1.ListNodeNamesRequest
	(*NodeNameEntry)(nil),                    // 87: meshpipe.v1.NodeNameEntry
	(*ListNodeNamesResponse)(nil),            // 88: meshpipe.v1.ListNodeNamesResponse
	(*ListPrimaryChannelsRequest)(nil),       // 89: meshpipe.v1.ListPrimaryChannelsRequest
	(*ListPrimaryChannelsResponse)(nil),      // 90: meshpipe.v1.ListPrimaryChannelsResponse
	(*timestamppb.Timestamp)(nil),            // 91: google.protobuf.Timestamp
}
var file_proto_meshpipe_v1_data_proto_depIdxs = []int32{
	1,   // 0: meshpipe.v1.DashboardResponse.packet_types:type_name -> meshpipe.v1.PacketTypeCount
	91,  // 1: meshpipe.v1.PacketFilter.start_time:type_name -> google.protobuf.Timestamp
	91,  // 2: meshpipe.v1.PacketFilter.end_time:type_name -> google.protobuf.Timestamp
	91,  // 3: meshpipe.v1.Packet.timestamp:type_name -> google.protobuf.Timestamp
	91,  // 4: meshpipe.v1.MeshPacketAggregate.first_received_at:type_name -> google.protobuf.Timestamp
	91,  // 5: meshpipe.v1.MeshPacketAggregate.last_received_at:type_name -> google.protobuf.Timestamp
	4,   // 6: meshpipe.v1.ListPacketsRequest.filter:type_name -> meshpipe.v1.PacketFilter
	3,   // 7: meshpipe.v1.ListPacketsRequest.pagination:type_name -> meshpipe.v1.Pagination
	6,   // 8: meshpipe.v1.ListPacketsRequest.aggregation:type_name -> meshpipe.v1.MeshPacketAggregationOptions
	5,   // 9: meshpipe.v1.ListPacketsResponse.packets:type_name -> meshpipe.v1.Packet
	7,   // 10: meshpipe.v1.ListPacketsResponse.mesh_packet_aggregates:type_name -> meshpipe.v1.MeshPacketAggregate
	91,  // 11: meshpipe.v1.Node.first_seen:type_name -> google.protobuf.Timestamp
	91,  // 12: meshpipe.v1.Node.last_seen:type_name -> google.protobuf.Timestamp
	91,  // 13: meshpipe.v1.Node.last_packet_time:type_name -> google.protobuf.Timestamp
	91,  // 14: meshpipe.v1.NodeGatewayMetric.last_seen:type_name -> google.protobuf.Timestamp
	91,  // 15: meshpipe.v1.NodeNeighbor.last_seen:type_name -> google.protobuf.Timestamp
	10,  // 16: meshpipe.v1.ListNodesRequest.filter:type_name -> meshpipe.v1.NodeFilter
	3,   // 17: meshpipe.v1.ListNodesRequest.pagination:type_name -> meshpipe.v1.Pagination
	11,  // 18: meshpipe.v1.ListNodesResponse.nodes:type_name -> meshpipe.v1.Node
	11,  // 19: meshpipe.v1.GetNodeResponse.node:type_name -> meshpipe.v1.Node
	91,  // 20: meshpipe.v1.GatewayStat.first_seen:type_name -> google.protobuf.Timestamp
	91,  // 21: meshpipe.v1.GatewayStat.last_seen:type_name -> google.protobuf.Timestamp
	20,  // 22: meshpipe.v1.GatewayStatsResponse.stats:type_name -> meshpipe.v1.GatewayStat
	91,  // 23: meshpipe.v1.LinkAggregate.first_seen:type_name -> google.protobuf.Timestamp
	91,  // 24: meshpipe.v1.LinkAggregate.last_seen:type_name -> google.protobuf.Timestamp
	22,  // 25: meshpipe.v1.ListLinksRequest.filter:type_name -> meshpipe.v1.LinkFilter
	3,   // 26: meshpipe.v1.ListLinksRequest.pagination:type_name -> meshpipe.v1.Pagination
	23,  // 27: meshpipe.v1.ListLinksResponse.links:type_name -> meshpipe.v1.LinkAggregate
	91,  // 28: meshpipe.v1.TraceroutePath.first_seen:type_name -> google.protobuf.Timestamp
	91,  // 29: meshpipe.v1.TraceroutePath.last_seen:type_name -> google.protobuf.Timestamp
	26,  // 30: meshpipe.v1.ListTraceroutesRequest.filter:type_name -> meshpipe.v1.TracerouteFilter
	3,   // 31: meshpipe.v1.ListTraceroutesRequest.pagination:type_name -> meshpipe.v1.Pagination
	27,  // 32: meshpipe.v1.ListTraceroutesResponse.paths:type_name -> meshpipe.v1.TraceroutePath
	91,  // 33: meshpipe.v1.RangeTestResult.received_at:type_name -> google.protobuf.Timestamp
	30,  // 34: meshpipe.v1.ListRangeTestsRequest.filter:type_name -> meshpipe.v1.RangeTestFilter
	3,   // 35: meshpipe.v1.ListRangeTestsRequest.pagination:type_name -> meshpipe.v1.Pagination
	31,  // 36: meshpipe.v1.ListRangeTestsResponse.results:type_name -> meshpipe.v1.RangeTestResult
	91,  // 37: meshpipe.v1.StoreForwardEvent.received_at:type_name -> google.protobuf.Timestamp
	3,   // 38: meshpipe.v1.ListStoreForwardRequest.pagination:type_name -> meshpipe.v1.Pagination
	34,  // 39: meshpipe.v1.ListStoreForwardResponse.events:type_name -> meshpipe.v1.StoreForwardEvent
	91,  // 40: meshpipe.v1.PaxcounterSample.received_at:type_name -> google.protobuf.Timestamp
	3,   // 41: meshpipe.v1.ListPaxcounterRequest.pagination:type_name -> meshpipe.v1.Pagination
	37,  // 42: meshpipe.v1.ListPaxcounterResponse.samples:type_name -> meshpipe.v1.PaxcounterSample
	91,  // 43: meshpipe.v1.NodeLocationFilter.start_time:type_name -> google.protobuf.Timestamp
	91,  // 44: meshpipe.v1.NodeLocation.timestamp:type_name -> google.protobuf.Timestamp
	40,  // 45: meshpipe.v1.ListNodeLocationsRequest.filter:type_name -> meshpipe.v1.NodeLocationFilter
	3,   // 46: meshpipe.v1.ListNodeLocationsRequest.pagination:type_name -> meshpipe.v1.Pagination
	41,  // 47: meshpipe.v1.ListNodeLocationsResponse.locations:type_name -> meshpipe.v1.NodeLocation
	91,  // 48: meshpipe.v1.ChatMessage.timestamp:type_name -> google.protobuf.Timestamp
	45,  // 49: meshpipe.v1.ChatMessage.gateways:type_name -> meshpipe.v1.ChatMessageGateway
	44,  // 50: meshpipe.v1.GetChatWindowRequest.filter:type_name -> meshpipe.v1.ChatWindowFilter
	91,  // 51: meshpipe.v1.GetChatWindowRequest.window_start:type_name -> google.protobuf.Timestamp
	91,  // 52: meshpipe.v1.GetChatWindowRequest.before:type_name -> google.protobuf.Timestamp
	3,   // 53: meshpipe.v1.GetChatWindowRequest.pagination:type_name -> meshpipe.v1.Pagination
	46,  // 54: meshpipe.v1.GetChatWindowResponse.messages:type_name -> meshpipe.v1.ChatMessage
	47,  // 55: meshpipe.v1.GetChatWindowResponse.counters:type_name -> meshpipe.v1.ChatWindowCounters
	91,  // 56: meshpipe.v1.GetChatWindowResponse.window_start:type_name -> google.protobuf.Timestamp
	91,  // 57: meshpipe.v1.NodeAnalytics.last_packet_time:type_name -> google.protobuf.Timestamp
	12,  // 58: meshpipe.v1.NodeAnalytics.gateways:type_name -> meshpipe.v1.NodeGatewayMetric
	13,  // 59: meshpipe.v1.NodeAnalytics.neighbors:type_name -> meshpipe.v1.NodeNeighbor
	14,  // 60: meshpipe.v1.NodeAnalytics.roles:type_name -> meshpipe.v1.NodeRoleSummary
	11,  // 61: meshpipe.v1.GetNodeAnalyticsResponse.node:type_name -> meshpipe.v1.Node
	50,  // 62: meshpipe.v1.GetNodeAnalyticsResponse.analytics:type_name -> meshpipe.v1.NodeAnalytics
	91,  // 63: meshpipe.v1.GatewayOverview.last_seen:type_name -> google.protobuf.Timestamp
	54,  // 64: meshpipe.v1.GetGatewayOverviewResponse.gateways:type_name -> meshpipe.v1.GatewayOverview
	91,  // 65: meshpipe.v1.TemporalBucket.bucket_start:type_name -> google.protobuf.Timestamp
	56,  // 66: meshpipe.v1.GetAnalyticsSummaryResponse.packet_success:type_name -> meshpipe.v1.PacketSuccessStats
	57,  // 67: meshpipe.v1.GetAnalyticsSummaryResponse.node_activity:type_name -> meshpipe.v1.NodeActivityBucket
	58,  // 68: meshpipe.v1.GetAnalyticsSummaryResponse.signal_quality:type_name -> meshpipe.v1.SignalQualitySummary
	59,  // 69: meshpipe.v1.GetAnalyticsSummaryResponse.hourly_packets:type_name -> meshpipe.v1.TemporalBucket
	60,  // 70: meshpipe.v1.GetAnalyticsSummaryResponse.top_nodes:type_name -> meshpipe.v1.TopNode
	61,  // 71: meshpipe.v1.GetAnalyticsSummaryResponse.packet_type_distribution:type_name -> meshpipe.v1.DistributionEntry
	61,  // 72: meshpipe.v1.GetAnalyticsSummaryResponse.gateway_distribution:type_name -> meshpipe.v1.DistributionEntry
	91,  // 73: meshpipe.v1.TracerouteHop.received_at:type_name -> google.protobuf.Timestamp
	64,  // 74: meshpipe.v1.ListTracerouteHopsRequest.filter:type_name -> meshpipe.v1.TracerouteHopFilter
	3,   // 75: meshpipe.v1.ListTracerouteHopsRequest.pagination:type_name -> meshpipe.v1.Pagination
	65,  // 76: meshpipe.v1.ListTracerouteHopsResponse.hops:type_name -> meshpipe.v1.TracerouteHop
	91,  // 77: meshpipe.v1.TracerouteGraphRequest.start_time:type_name -> google.protobuf.Timestamp
	91,  // 78: meshpipe.v1.TracerouteGraphRequest.end_time:type_name -> google.protobuf.Timestamp
	69,  // 79: meshpipe.v1.TracerouteGraphResponse.nodes:type_name -> meshpipe.v1.TracerouteGraphNode
	70,  // 80: meshpipe.v1.TracerouteGraphResponse.edges:type_name -> meshpipe.v1.TracerouteGraphEdge
	91,  // 81: meshpipe.v1.TracerouteGatewayObservation.received_at:type_name -> google.protobuf.Timestamp
	91,  // 82: meshpipe.v1.TraceroutePacket.timestamp:type_name -> google.protobuf.Timestamp
	76,  // 83: meshpipe.v1.TraceroutePacket.gateways:type_name -> meshpipe.v1.TracerouteGatewayObservation
	91,  // 84: meshpipe.v1.TraceroutePacketFilter.start_time:type_name -> google.protobuf.Timestamp
	91,  // 85: meshpipe.v1.TraceroutePacketFilter.end_time:type_name -> google.protobuf.Timestamp
	78,  // 86: meshpipe.v1.ListTraceroutePacketsRequest.filter:type_name -> meshpipe.v1.TraceroutePacketFilter
	77,  // 87: meshpipe.v1.ListTraceroutePacketsResponse.packets:type_name -> meshpipe.v1.TraceroutePacket
	77,  // 88: meshpipe.v1.GetTracerouteDetailsResponse.packet:type_name -> meshpipe.v1.TraceroutePacket
	65,  // 89: meshpipe.v1.GetTracerouteDetailsResponse.hops:type_name -> meshpipe.v1.TracerouteHop
	91,  // 90: meshpipe.v1.NodeDirectReception.timestamp:type_name -> google.protobuf.Timestamp
	83,  // 91: meshpipe.v1.ListNodeDirectReceptionsResponse.receptions:type_name -> meshpipe.v1.NodeDirectReception
	87,  // 92: meshpipe.v1.ListNodeNamesResponse.entries:type_name -> meshpipe.v1.NodeNameEntry
	0,   // 93: meshpipe.v1.MeshpipeData.GetDashboardStats:input_type -> meshpipe.v1.DashboardRequest
	8,   // 94: meshpipe.v1.MeshpipeData.ListPackets:input_type -> meshpipe.v1.ListPacketsRequest
	8,   // 95: meshpipe.v1.MeshpipeData.StreamPackets:input_type -> meshpipe.v1.ListPacketsRequest
	15,  // 96: meshpipe.v1.MeshpipeData.ListNodes:input_type -> meshpipe.v1.ListNodesRequest
	17,  // 97: meshpipe.v1.MeshpipeData.GetNode:input_type -> meshpipe.v1.GetNodeRequest
	19,  // 98: meshpipe.v1.MeshpipeData.GetGatewayStats:input_type -> meshpipe.v1.GatewayFilter
	24,  // 99: meshpipe.v1.MeshpipeData.ListLinks:input_type -> meshpipe.v1.ListLinksRequest
	28,  // 100: meshpipe.v1.MeshpipeData.ListTraceroutes:input_type -> meshpipe.v1.ListTraceroutesRequest
	32,  // 101: meshpipe.v1.MeshpipeData.ListRangeTests:input_type -> meshpipe.v1.ListRangeTestsRequest
	35,  // 102: meshpipe.v1.MeshpipeData.ListStoreForward:input_type -> meshpipe.v1.ListStoreForwardRequest
	38,  // 103: meshpipe.v1.MeshpipeData.ListPaxcounter:input_type -> meshpipe.v1.ListPaxcounterRequest
	42,  // 104: meshpipe.v1.MeshpipeData.ListNodeLocations:input_type -> meshpipe.v1.ListNodeLocationsRequest
	48,  // 105: meshpipe.v1.MeshpipeData.GetChatWindow:input_type -> meshpipe.v1.GetChatWindowRequest
	51,  // 106: meshpipe.v1.MeshpipeData.GetNodeAnalytics:input_type -> meshpipe.v1.GetNodeAnalyticsRequest
	53,  // 107: meshpipe.v1.MeshpipeData.GetGatewayOverview:input_type -> meshpipe.v1.GetGatewayOverviewRequest
	62,  // 108: meshpipe.v1.MeshpipeData.GetAnalyticsSummary:input_type -> meshpipe.v1.GetAnalyticsSummaryRequest
	79,  // 109: meshpipe.v1.MeshpipeData.ListTraceroutePackets:input_type -> meshpipe.v1.ListTraceroutePacketsRequest
	81,  // 110: meshpipe.v1.MeshpipeData.GetTracerouteDetails:input_type -> meshpipe.v1.GetTracerouteDetailsRequest
	66,  // 111: meshpipe.v1.MeshpipeData.ListTracerouteHops:input_type -> meshpipe.v1.ListTracerouteHopsRequest
	68,  // 112: meshpipe.v1.MeshpipeData.GetTracerouteGraph:input_type -> meshpipe.v1.TracerouteGraphRequest
	84,  // 113: meshpipe.v1.MeshpipeData.ListNodeDirectReceptions:input_type -> meshpipe.v1.ListNodeDirectReceptionsRequest
	86,  // 114: meshpipe.v1.MeshpipeData.ListNodeNames:input_type -> meshpipe.v1.ListNodeNamesRequest
	89,  // 115: meshpipe.v1.MeshpipeData.ListPrimaryChannels:input_type -> meshpipe.v1.ListPrimaryChannelsRequest
	72,  // 116: meshpipe.v1.MeshpipeData.Healthz:input_type -> meshpipe.v1.HealthCheckRequest
	74,  // 117: meshpipe.v1.MeshpipeData.GetVersion:input_type -> meshpipe.v1.GetVersionRequest
	2,   // 118: meshpipe.v1.MeshpipeData.GetDashboardStats:output_type -> meshpipe.v1.DashboardResponse
	9,   // 119: meshpipe.v1.MeshpipeData.ListPackets:output_type -> meshpipe.v1.ListPacketsResponse
	5,   // 120: meshpipe.v1.MeshpipeData.StreamPackets:output_type -> meshpipe.v1.Packet
	16,  // 121: meshpipe.v1.MeshpipeData.ListNodes:output_type -> meshpipe.v1.ListNodesResponse
	18,  // 122: meshpipe.v1.MeshpipeData.GetNode:output_type -> meshpipe.v1.GetNodeResponse
	21,  // 123: meshpipe.v1.MeshpipeData.GetGatewayStats:output_type -> meshpipe.v1.GatewayStatsResponse
	25,  // 124: meshpipe.v1.MeshpipeData.ListLinks:output_type -> meshpipe.v1.ListLinksResponse
	29,  // 125: meshpipe.v1.MeshpipeData.ListTraceroutes:output_type -> meshpipe.v1.ListTraceroutesResponse
	33,  // 126: meshpipe.v1.MeshpipeData.ListRangeTests:output_type -> meshpipe.v1.ListRangeTestsResponse
	36,  // 127: meshpipe.v1.MeshpipeData.ListStoreForward:output_type -> meshpipe.v1.ListStoreForwardResponse
	39,  // 128: meshpipe.v1.MeshpipeData.ListPaxcounter:output_type -> meshpipe.v1.ListPaxcounterResponse
	43,  // 129: meshpipe.v1.MeshpipeData.ListNodeLocations:output_type -> meshpipe.v1.ListNodeLocationsResponse
	49,  // 130: meshpipe.v1.MeshpipeData.GetChatWindow:output_type -> meshpipe.v1.GetChatWindowResponse
	52,  // 131: meshpipe.v1.MeshpipeData.GetNodeAnalytics:output_type -> meshpipe.v1.GetNodeAnalyticsResponse
	55,  // 132: meshpipe.v1.MeshpipeData.GetGatewayOverview:output_type -> meshpipe.v1.GetGatewayOverviewResponse
	63,  // 133: meshpipe.v1.MeshpipeData.GetAnalyticsSummary:output_type -> meshpipe.v1.GetAnalyticsSummaryResponse
	80,  // 134: meshpipe.v1.MeshpipeData.ListTraceroutePackets:output_type -> meshpipe.v1.ListTraceroutePacketsResponse
	82,  // 135: meshpipe.v1.MeshpipeData.GetTracerouteDetails:output_type -> meshpipe.v1.GetTracerouteDetailsResponse
	67,  // 136: meshpipe.v1.MeshpipeData.ListTracerouteHops:output_type -> meshpipe.v1.ListTracerouteHopsResponse
	71,  // 137: meshpipe.v1.MeshpipeData.GetTracerouteGraph:output_type -> meshpipe.v1.TracerouteGraphResponse
	85,  // 138: meshpipe.v1.MeshpipeData.ListNodeDirectReceptions:output_type -> meshpipe.v1.ListNodeDirectReceptionsResponse
	88,  // 139: meshpipe.v1.MeshpipeData.ListNodeNames:output_type -> meshpipe.v1.ListNodeNamesResponse
	90,  // 140: meshpipe.v1.MeshpipeData.ListPrimaryChannels:output_type -> meshpipe.v1.ListPrimaryChannelsResponse
	73,  // 141: meshpipe.v1.MeshpipeData.Healthz:output_type -> meshpipe.v1.HealthCheckResponse
	75,  // 142: meshpipe.v1.MeshpipeData.GetVersion:output_type -> meshpipe.v1.VersionResponse
	118, // [118:143] is the sub-list for method output_type
	93,  // [93:118] is the sub-list for method input_type
	93,  // [93:93] is the sub-list for extension type_name
	93,  // [93:93] is the sub-list for extension extendee
	0,   // [0:93] is the sub-list for field type_name
}

func init() { file_proto_meshpipe_v1_data_proto_init() }
func file_proto_meshpipe_v1_data_proto_init() {
	if File_proto_meshpipe_v1_data_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_meshpipe_v1_data_proto_rawDesc), len(file_proto_meshpipe_v1_data_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   91,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_meshpipe_v1_data_proto_goTypes,
		DependencyIndexes: file_proto_meshpipe_v1_data_proto_depIdxs,
		MessageInfos:      file_proto_meshpipe_v1_data_proto_msgTypes,
	}.Build()
	File_proto_meshpipe_v1_data_proto = out.File
	file_proto_meshpipe_v1_data_proto_goTypes = nil
	file_proto_meshpipe_v1_data_proto_depIdxs = nil
}
